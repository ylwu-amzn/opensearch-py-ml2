Search.setIndex({"docnames": ["examples/demo_notebook", "examples/demo_transformer_model_train_save_upload_to_openSearch", "examples/index", "examples/online_retail_analysis", "index", "reference/api/DataFrame", "reference/api/DataFrame.agg", "reference/api/DataFrame.aggregate", "reference/api/DataFrame.columns", "reference/api/DataFrame.count", "reference/api/DataFrame.describe", "reference/api/DataFrame.drop", "reference/api/DataFrame.dtypes", "reference/api/DataFrame.empty", "reference/api/DataFrame.filter", "reference/api/DataFrame.get", "reference/api/DataFrame.groupby", "reference/api/DataFrame.head", "reference/api/DataFrame.hist", "reference/api/DataFrame.idxmax", "reference/api/DataFrame.idxmin", "reference/api/DataFrame.index", "reference/api/DataFrame.info", "reference/api/DataFrame.iterrows", "reference/api/DataFrame.itertuples", "reference/api/DataFrame.keys", "reference/api/DataFrame.mad", "reference/api/DataFrame.max", "reference/api/DataFrame.mean", "reference/api/DataFrame.median", "reference/api/DataFrame.min", "reference/api/DataFrame.mode", "reference/api/DataFrame.ndim", "reference/api/DataFrame.nunique", "reference/api/DataFrame.os_dtypes", "reference/api/DataFrame.os_info", "reference/api/DataFrame.os_match", "reference/api/DataFrame.os_query", "reference/api/DataFrame.quantile", "reference/api/DataFrame.query", "reference/api/DataFrame.sample", "reference/api/DataFrame.select_dtypes", "reference/api/DataFrame.shape", "reference/api/DataFrame.size", "reference/api/DataFrame.std", "reference/api/DataFrame.sum", "reference/api/DataFrame.tail", "reference/api/DataFrame.to_csv", "reference/api/DataFrame.to_html", "reference/api/DataFrame.to_numpy", "reference/api/DataFrame.to_pandas", "reference/api/DataFrame.to_string", "reference/api/DataFrame.values", "reference/api/DataFrame.var", "reference/api/Index", "reference/api/Series", "reference/api/Series.add", "reference/api/Series.describe", "reference/api/Series.div", "reference/api/Series.divide", "reference/api/Series.dtype", "reference/api/Series.dtypes", "reference/api/Series.empty", "reference/api/Series.filter", "reference/api/Series.floordiv", "reference/api/Series.head", "reference/api/Series.hist", "reference/api/Series.index", "reference/api/Series.isin", "reference/api/Series.isna", "reference/api/Series.isnull", "reference/api/Series.mad", "reference/api/Series.max", "reference/api/Series.mean", "reference/api/Series.median", "reference/api/Series.min", "reference/api/Series.mod", "reference/api/Series.mode", "reference/api/Series.mul", "reference/api/Series.multiply", "reference/api/Series.name", "reference/api/Series.ndim", "reference/api/Series.notna", "reference/api/Series.notnull", "reference/api/Series.nunique", "reference/api/Series.os_dtype", "reference/api/Series.os_dtypes", "reference/api/Series.os_info", "reference/api/Series.os_match", "reference/api/Series.pow", "reference/api/Series.quantile", "reference/api/Series.radd", "reference/api/Series.rdiv", "reference/api/Series.rdivide", "reference/api/Series.rename", "reference/api/Series.rfloordiv", "reference/api/Series.rmod", "reference/api/Series.rmul", "reference/api/Series.rmultiply", "reference/api/Series.rpow", "reference/api/Series.rsub", "reference/api/Series.rsubtract", "reference/api/Series.rtruediv", "reference/api/Series.sample", "reference/api/Series.shape", "reference/api/Series.size", "reference/api/Series.std", "reference/api/Series.sub", "reference/api/Series.subtract", "reference/api/Series.sum", "reference/api/Series.tail", "reference/api/Series.to_numpy", "reference/api/Series.to_pandas", "reference/api/Series.to_string", "reference/api/Series.truediv", "reference/api/Series.unique", "reference/api/Series.value_counts", "reference/api/Series.var", "reference/api/csv_to_opensearch", "reference/api/groupby.DataFrameGroupBy", "reference/api/groupby.DataFrameGroupBy.agg", "reference/api/groupby.DataFrameGroupBy.aggregate", "reference/api/groupby.DataFrameGroupBy.count", "reference/api/groupby.DataFrameGroupBy.mad", "reference/api/groupby.DataFrameGroupBy.max", "reference/api/groupby.DataFrameGroupBy.mean", "reference/api/groupby.DataFrameGroupBy.median", "reference/api/groupby.DataFrameGroupBy.min", "reference/api/groupby.DataFrameGroupBy.nunique", "reference/api/groupby.DataFrameGroupBy.quantile", "reference/api/groupby.DataFrameGroupBy.std", "reference/api/groupby.DataFrameGroupBy.sum", "reference/api/groupby.DataFrameGroupBy.var", "reference/api/groupby.GroupBy", "reference/api/ml_commons_upload_api", "reference/api/opensearch_to_pandas", "reference/api/pandas_to_opensearch", "reference/api/sentence_transformer", "reference/dataframe", "reference/general_utility_functions", "reference/index", "reference/indexing", "reference/io", "reference/mlcommons", "reference/sentencetransformer", "reference/series"], "filenames": ["examples/demo_notebook.ipynb", "examples/demo_transformer_model_train_save_upload_to_openSearch.ipynb", "examples/index.rst", "examples/online_retail_analysis.ipynb", "index.rst", "reference/api/DataFrame.rst", "reference/api/DataFrame.agg.rst", "reference/api/DataFrame.aggregate.rst", "reference/api/DataFrame.columns.rst", "reference/api/DataFrame.count.rst", "reference/api/DataFrame.describe.rst", "reference/api/DataFrame.drop.rst", "reference/api/DataFrame.dtypes.rst", "reference/api/DataFrame.empty.rst", "reference/api/DataFrame.filter.rst", "reference/api/DataFrame.get.rst", "reference/api/DataFrame.groupby.rst", "reference/api/DataFrame.head.rst", "reference/api/DataFrame.hist.rst", "reference/api/DataFrame.idxmax.rst", "reference/api/DataFrame.idxmin.rst", "reference/api/DataFrame.index.rst", "reference/api/DataFrame.info.rst", "reference/api/DataFrame.iterrows.rst", "reference/api/DataFrame.itertuples.rst", "reference/api/DataFrame.keys.rst", "reference/api/DataFrame.mad.rst", "reference/api/DataFrame.max.rst", "reference/api/DataFrame.mean.rst", "reference/api/DataFrame.median.rst", "reference/api/DataFrame.min.rst", "reference/api/DataFrame.mode.rst", "reference/api/DataFrame.ndim.rst", "reference/api/DataFrame.nunique.rst", "reference/api/DataFrame.os_dtypes.rst", "reference/api/DataFrame.os_info.rst", "reference/api/DataFrame.os_match.rst", "reference/api/DataFrame.os_query.rst", "reference/api/DataFrame.quantile.rst", "reference/api/DataFrame.query.rst", "reference/api/DataFrame.sample.rst", "reference/api/DataFrame.select_dtypes.rst", "reference/api/DataFrame.shape.rst", "reference/api/DataFrame.size.rst", "reference/api/DataFrame.std.rst", "reference/api/DataFrame.sum.rst", "reference/api/DataFrame.tail.rst", "reference/api/DataFrame.to_csv.rst", "reference/api/DataFrame.to_html.rst", "reference/api/DataFrame.to_numpy.rst", "reference/api/DataFrame.to_pandas.rst", "reference/api/DataFrame.to_string.rst", "reference/api/DataFrame.values.rst", "reference/api/DataFrame.var.rst", "reference/api/Index.rst", "reference/api/Series.rst", "reference/api/Series.add.rst", "reference/api/Series.describe.rst", "reference/api/Series.div.rst", "reference/api/Series.divide.rst", "reference/api/Series.dtype.rst", "reference/api/Series.dtypes.rst", "reference/api/Series.empty.rst", "reference/api/Series.filter.rst", "reference/api/Series.floordiv.rst", "reference/api/Series.head.rst", "reference/api/Series.hist.rst", "reference/api/Series.index.rst", "reference/api/Series.isin.rst", "reference/api/Series.isna.rst", "reference/api/Series.isnull.rst", "reference/api/Series.mad.rst", "reference/api/Series.max.rst", "reference/api/Series.mean.rst", "reference/api/Series.median.rst", "reference/api/Series.min.rst", "reference/api/Series.mod.rst", "reference/api/Series.mode.rst", "reference/api/Series.mul.rst", "reference/api/Series.multiply.rst", "reference/api/Series.name.rst", "reference/api/Series.ndim.rst", "reference/api/Series.notna.rst", "reference/api/Series.notnull.rst", "reference/api/Series.nunique.rst", "reference/api/Series.os_dtype.rst", "reference/api/Series.os_dtypes.rst", "reference/api/Series.os_info.rst", "reference/api/Series.os_match.rst", "reference/api/Series.pow.rst", "reference/api/Series.quantile.rst", "reference/api/Series.radd.rst", "reference/api/Series.rdiv.rst", "reference/api/Series.rdivide.rst", "reference/api/Series.rename.rst", "reference/api/Series.rfloordiv.rst", "reference/api/Series.rmod.rst", "reference/api/Series.rmul.rst", "reference/api/Series.rmultiply.rst", "reference/api/Series.rpow.rst", "reference/api/Series.rsub.rst", "reference/api/Series.rsubtract.rst", "reference/api/Series.rtruediv.rst", "reference/api/Series.sample.rst", "reference/api/Series.shape.rst", "reference/api/Series.size.rst", "reference/api/Series.std.rst", "reference/api/Series.sub.rst", "reference/api/Series.subtract.rst", "reference/api/Series.sum.rst", "reference/api/Series.tail.rst", "reference/api/Series.to_numpy.rst", "reference/api/Series.to_pandas.rst", "reference/api/Series.to_string.rst", "reference/api/Series.truediv.rst", "reference/api/Series.unique.rst", "reference/api/Series.value_counts.rst", "reference/api/Series.var.rst", "reference/api/csv_to_opensearch.rst", "reference/api/groupby.DataFrameGroupBy.rst", "reference/api/groupby.DataFrameGroupBy.agg.rst", "reference/api/groupby.DataFrameGroupBy.aggregate.rst", "reference/api/groupby.DataFrameGroupBy.count.rst", "reference/api/groupby.DataFrameGroupBy.mad.rst", "reference/api/groupby.DataFrameGroupBy.max.rst", "reference/api/groupby.DataFrameGroupBy.mean.rst", "reference/api/groupby.DataFrameGroupBy.median.rst", "reference/api/groupby.DataFrameGroupBy.min.rst", "reference/api/groupby.DataFrameGroupBy.nunique.rst", "reference/api/groupby.DataFrameGroupBy.quantile.rst", "reference/api/groupby.DataFrameGroupBy.std.rst", "reference/api/groupby.DataFrameGroupBy.sum.rst", "reference/api/groupby.DataFrameGroupBy.var.rst", "reference/api/groupby.GroupBy.rst", "reference/api/ml_commons_upload_api.rst", "reference/api/opensearch_to_pandas.rst", "reference/api/pandas_to_opensearch.rst", "reference/api/sentence_transformer.rst", "reference/dataframe.rst", "reference/general_utility_functions.rst", "reference/index.rst", "reference/indexing.rst", "reference/io.rst", "reference/mlcommons.rst", "reference/sentencetransformer.rst", "reference/series.rst"], "titles": ["Demo Notebook for Dataframe", "Demo Notebook for Sentence Transformer Model Training, Saving and Uploading to OpenSearch", "Examples", "Online Retail analysis", "Opensearch-py-ml: DataFrames and Machine Learning backed by Opensearch", "DataFrame", "DataFrame.agg", "DataFrame.aggregate", "DataFrame.columns", "DataFrame.count", "DataFrame.describe", "DataFrame.drop", "DataFrame.dtypes", "DataFrame.empty", "DataFrame.filter", "DataFrame.get", "DataFrame.groupby", "DataFrame.head", "DataFrame.hist", "DataFrame.idxmax", "DataFrame.idxmin", "DataFrame.index", "DataFrame.info", "DataFrame.iterrows", "DataFrame.itertuples", "DataFrame.keys", "DataFrame.mad", "DataFrame.max", "DataFrame.mean", "DataFrame.median", "DataFrame.min", "DataFrame.mode", "DataFrame.ndim", "DataFrame.nunique", "DataFrame.os_dtypes", "DataFrame.os_info", "DataFrame.os_match", "DataFrame.os_query", "DataFrame.quantile", "DataFrame.query", "DataFrame.sample", "DataFrame.select_dtypes", "DataFrame.shape", "DataFrame.size", "DataFrame.std", "DataFrame.sum", "DataFrame.tail", "DataFrame.to_csv", "DataFrame.to_html", "DataFrame.to_numpy", "DataFrame.to_pandas", "DataFrame.to_string", "DataFrame.values", "DataFrame.var", "opensearch_py_ml.Index", "Series", "Series.add", "Series.describe", "Series.div", "Series.divide", "Series.dtype", "Series.dtypes", "Series.empty", "Series.filter", "Series.floordiv", "Series.head", "Series.hist", "Series.index", "Series.isin", "Series.isna", "Series.isnull", "Series.mad", "Series.max", "Series.mean", "Series.median", "Series.min", "Series.mod", "Series.mode", "Series.mul", "Series.multiply", "Series.name", "Series.ndim", "Series.notna", "Series.notnull", "Series.nunique", "Series.os_dtype", "Series.os_dtypes", "Series.os_info", "Series.os_match", "Series.pow", "Series.quantile", "Series.radd", "Series.rdiv", "Series.rdivide", "Series.rename", "Series.rfloordiv", "Series.rmod", "Series.rmul", "Series.rmultiply", "Series.rpow", "Series.rsub", "Series.rsubtract", "Series.rtruediv", "Series.sample", "Series.shape", "Series.size", "Series.std", "Series.sub", "Series.subtract", "Series.sum", "Series.tail", "Series.to_numpy", "Series.to_pandas", "Series.to_string", "Series.truediv", "Series.unique", "Series.value_counts", "Series.var", "csv_to_opensearch", "groupby.DataFrameGroupBy", "groupby.DataFrameGroupBy.agg", "groupby.DataFrameGroupBy.aggregate", "groupby.DataFrameGroupBy.count", "groupby.DataFrameGroupBy.mad", "groupby.DataFrameGroupBy.max", "groupby.DataFrameGroupBy.mean", "groupby.DataFrameGroupBy.median", "groupby.DataFrameGroupBy.min", "groupby.DataFrameGroupBy.nunique", "groupby.DataFrameGroupBy.quantile", "groupby.DataFrameGroupBy.std", "groupby.DataFrameGroupBy.sum", "groupby.DataFrameGroupBy.var", "groupby.GroupBy", "upload_model", "opensearch_to_pandas", "pandas_to_opensearch", "Train", "DataFrame", "General Utility Functions", "API Reference", "Index", "Input/Output", "MLCommons Support", "Sentence Transformer", "Series"], "terms": {"2": [0, 3, 5, 6, 7, 9, 11, 15, 16, 17, 22, 23, 24, 26, 28, 31, 32, 37, 38, 46, 49, 55, 56, 58, 59, 64, 76, 77, 78, 79, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 111, 114, 118, 123, 125, 126, 128, 129, 130, 131, 135, 136], "load_ext": [0, 3], "autoreload": [0, 3], "3": [0, 3, 5, 11, 15, 16, 17, 18, 23, 24, 29, 31, 37, 38, 45, 49, 53, 55, 56, 58, 59, 64, 66, 76, 77, 78, 79, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 111, 114, 118, 122, 123, 126, 128, 129, 130, 131, 132, 135, 136], "thi": [0, 1, 3, 4, 5, 9, 14, 17, 22, 33, 35, 36, 43, 46, 48, 49, 51, 52, 54, 55, 63, 88, 94, 105, 111, 113, 116, 119, 134, 135, 136, 140], "stop": [0, 3], "py": [0, 1, 3, 24, 115, 140], "ml": [0, 1, 3, 9, 24, 115, 134, 140], "from": [0, 1, 3, 5, 11, 14, 15, 18, 22, 36, 40, 63, 66, 88, 94, 118, 135, 136], "yell": [0, 3], "everi": [0, 3, 54, 135], "time": [0, 1, 3, 4, 43, 105], "connect": [0, 1, 3], "made": [0, 3], "warn": [0, 1, 3], "filterwarn": [0, 1, 3], "ignor": [0, 1, 3, 6, 7, 10, 11, 36, 57, 88, 120, 121, 136], "4": [0, 1, 3, 5, 6, 7, 11, 15, 16, 23, 24, 31, 35, 36, 38, 49, 55, 56, 58, 59, 64, 76, 77, 78, 79, 84, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 111, 114, 118, 124, 125, 126, 127, 129, 131, 132, 135, 136], "demonstr": [0, 3], "support": [0, 1, 3, 4, 6, 7, 10, 11, 27, 28, 30, 45, 57, 72, 73, 74, 75, 94, 109, 118, 140], "pd": [0, 3, 8, 115, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136], "numpi": [0, 3, 4, 49, 52, 111], "np": [0, 3, 6, 7, 18, 41, 99], "matplotlib": [0, 3, 66], "pyplot": [0, 3, 66], "plt": [0, 3, 18, 66], "oml": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 49, 52, 53, 55, 56, 57, 58, 59, 61, 64, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 111, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136], "opensearchpi": [0, 1, 3, 55, 118], "standard": [0, 3, 26, 44, 106, 130], "test": [0, 3, 17, 46, 136], "set": [0, 3, 10, 24, 36, 48, 51, 57, 88, 113], "consist": [0, 3, 57], "result": [0, 3, 22, 39, 57], "conftest": [0, 3], "5": [0, 1, 3, 5, 11, 17, 23, 24, 31, 35, 37, 38, 46, 49, 56, 58, 59, 64, 65, 66, 76, 77, 78, 79, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 110, 111, 114, 118, 123, 128, 129, 135], "cluster_url": [0, 1, 3], "http": [0, 1, 3], "localhost": [0, 1, 3], "9200": [0, 1, 3], "def": [0, 1, 3], "get_os_cli": [0, 1, 3], "usernam": [0, 1, 3], "admin": [0, 1, 3], "password": [0, 1, 3], "param": [0, 1, 3], "cluster": [0, 3, 134, 135], "url": [0, 1, 3], "like": [0, 1, 3, 14, 37, 38, 55, 63, 90, 129, 141], "te": [0, 1, 3], "netwo": [0, 1, 3], "1s12ba42br23v": [0, 1, 3], "ff1736fa7db98ff2": [0, 1, 3], "elb": [0, 1, 3], "u": [0, 1, 3, 16, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "west": [0, 1, 3], "amazonaw": [0, 1, 3], "com": [0, 1, 3], "443": [0, 1, 3], "return": [0, 1, 3, 31, 49, 52, 60, 62, 77, 85, 111], "host": [0, 1, 3], "http_auth": [0, 1, 3], "verify_cert": [0, 1, 3], "fals": [0, 1, 3, 5, 6, 7, 11, 13, 16, 18, 23, 24, 26, 27, 28, 29, 30, 31, 35, 36, 38, 44, 45, 48, 50, 51, 53, 62, 88, 112, 113, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136], "6": [0, 1, 3, 11, 16, 27, 31, 33, 36, 53, 77, 95, 118, 120, 121, 124, 129, 131], "creat": [0, 1, 3, 9, 22, 55, 118, 134, 135, 136], "an": [0, 1, 3, 4, 5, 9, 14, 24, 35, 36, 37, 43, 46, 48, 51, 54, 55, 63, 69, 70, 82, 83, 88, 105, 113, 118, 135, 136, 140, 141], "flight": [0, 5, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 34, 35, 38, 39, 41, 44, 45, 46, 49, 53, 55, 57, 61, 66, 67, 71, 72, 73, 74, 75, 84, 86, 90, 94, 106, 109, 111, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135], "7": [0, 1, 3, 31, 36, 77, 118, 128, 131], "oml_flight": [0, 19, 20, 38, 90, 129], "8": [0, 1, 3, 6, 7, 31, 45, 77, 118, 136], "type": [0, 1, 3, 10, 11, 12, 15, 17, 22, 33, 34, 36, 46, 49, 57, 61, 85, 86, 111, 135, 136], "same": [0, 15, 27, 28, 29, 30, 38, 44, 45, 53, 123, 124, 125, 126, 127, 128, 130, 131, 132], "9": [0, 1, 6, 7, 31, 37, 77, 95, 118], "pd_flight": 0, "opensearch_to_panda": [0, 49, 52, 111, 136, 139], "10": [0, 1, 3, 5, 16, 18, 31, 35, 37, 66, 77, 97, 98, 116, 118, 122, 126, 128, 135], "core": [0, 5, 49, 111, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136], "frame": [0, 3, 49, 135, 136], "11": [0, 1, 3, 5, 27, 31, 35, 36, 77, 118, 124, 125, 126, 135], "39": [0, 1, 3, 31, 77, 90, 124, 125], "avgticketpric": [0, 5, 6, 7, 8, 10, 12, 16, 19, 20, 23, 24, 26, 27, 28, 29, 30, 34, 38, 41, 44, 45, 49, 53, 57, 61, 71, 72, 73, 74, 75, 86, 106, 109, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135], "cancel": [0, 5, 8, 16, 23, 24, 26, 27, 28, 29, 30, 41, 44, 45, 53, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135], "carrier": [0, 8, 15, 21, 49, 55, 67, 84, 94, 111, 116], "dest": [0, 8, 17, 41, 46], "destairportid": [0, 8, 35], "destcitynam": [0, 8], "destcountri": [0, 6, 7, 8, 16, 26, 27, 28, 29, 30, 44, 45, 53, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "destloc": [0, 8], "destregion": [0, 8], "destweath": [0, 8], "distancekilomet": [0, 6, 7, 8], "distancemil": [0, 8], "flightdelai": [0, 8], "flightdelaymin": [0, 8, 10, 19, 20, 35, 38, 39, 129], "flightdelaytyp": [0, 8], "flightnum": [0, 8], "flighttimehour": [0, 8], "flighttimemin": [0, 8, 66], "origin": [0, 8, 12, 17, 34, 46, 61, 86], "originairportid": [0, 8, 35], "origincitynam": [0, 8], "origincountri": [0, 8], "originloc": [0, 8], "originregion": [0, 8], "originweath": [0, 8, 66], "dayofweek": [0, 5, 8, 12, 16, 19, 20, 26, 27, 28, 29, 30, 34, 38, 41, 44, 45, 53, 61, 86, 90, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135], "timestamp": [0, 5, 6, 7, 8, 12, 16, 19, 20, 26, 27, 28, 29, 30, 31, 34, 35, 38, 41, 44, 45, 53, 61, 86, 90, 123, 124, 125, 126, 127, 129, 132, 135, 136], "object": [0, 3, 8, 10, 11, 12, 15, 17, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 34, 35, 41, 43, 44, 45, 46, 49, 53, 55, 56, 57, 60, 61, 77, 86, 94, 105, 111, 136, 140, 141], "12": [0, 1, 3, 27, 31, 77, 90, 118, 124, 135], "13": [0, 1, 3, 5, 16, 88, 95, 118, 126, 135], "float64": [0, 3, 6, 7, 12, 26, 27, 28, 29, 30, 38, 41, 44, 45, 53, 56, 57, 58, 59, 61, 64, 76, 78, 79, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 114, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136], "bool": [0, 1, 3, 6, 7, 13, 16, 22, 24, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 41, 44, 45, 50, 53, 69, 70, 71, 72, 73, 74, 75, 82, 83, 88, 106, 109, 112, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 134, 135, 136], "int64": [0, 3, 9, 12, 33, 35, 41, 56, 58, 59, 61, 64, 76, 78, 79, 89, 99, 107, 108, 114, 116, 136], "datetime64": [0, 12, 35, 41, 61, 77, 90, 136], "n": [0, 3, 9, 12, 17, 35, 40, 41, 46, 61, 65, 77, 90, 103, 110, 136], "length": [0, 3, 15, 55, 94, 113, 118], "27": [0, 1, 3, 5, 16, 39, 90, 118, 124, 126, 127, 135], "14": [0, 1, 3, 5, 31, 35, 77, 96, 124, 125, 135], "15": [0, 1, 3, 31, 35, 38, 77, 125], "includ": [0, 1, 3, 18, 22, 35, 41, 118, 136], "number": [0, 1, 9, 17, 18, 31, 40, 41, 42, 43, 46, 77, 84, 104, 105, 116, 118, 136], "841": [0, 5, 23, 24, 49, 135], "265642": [0, 5, 23, 24, 49, 135], "16492": 0, "326654": 0, "1030": 0, "770416": 0, "882": [0, 5, 23, 24, 49, 135], "982662": [0, 5, 23, 24, 49, 135], "8823": 0, "400140": 0, "464": [0, 3], "389481": 0, "190": [0, 5, 23, 24, 49, 135], "636904": [0, 5, 23, 24, 49, 135], "000000": [0, 3, 10, 16, 26, 27, 29, 30, 38, 57], "181": [0, 5, 23, 24, 49, 135], "694216": [0, 5, 23, 24, 49, 135], "555": 0, "737767": 0, "222": 0, "749059": 0, "730": [0, 5, 23, 24, 49, 135], "041778": [0, 5, 23, 24, 49, 135], "13358": 0, "244200": 0, "785": 0, "779071": 0, "13054": [0, 15, 46, 55, 94], "1080": 0, "446279": 0, "8058": 0, "581753": 0, "402": 0, "929088": 0, "13055": [0, 15, 46, 55, 94], "646": [0, 125], "612941": 0, "7088": 0, "598322": 0, "644": 0, "418029": 0, "13056": [0, 15, 46, 55, 94], "997": 0, "751876": 0, "10920": 0, "652972": 0, "937": 0, "540811": 0, "13057": [0, 15, 46, 55, 94], "1102": 0, "814465": 0, "18748": 0, "859647": 0, "1697": 0, "404971": 0, "13058": [0, 15, 46, 55, 94], "858": 0, "144337": 0, "16809": 0, "141923": 0, "1610": 0, "761827": 0, "13059": [0, 10, 15, 39, 55, 57, 94, 135], "row": [0, 3, 5, 11, 14, 16, 17, 23, 24, 31, 35, 36, 37, 40, 42, 43, 46, 49, 63, 77, 88, 104, 105, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 135, 136], "16": [0, 1, 3, 38, 118, 125, 126], "17": [0, 1, 3, 5, 16, 124, 125, 126, 127, 135], "18": [0, 1, 3, 5, 31, 58, 59, 64, 77, 114, 125, 126, 135], "19": [0, 1, 3, 16, 28, 31, 77, 96, 126, 127, 131], "20": [0, 1, 3, 28, 31, 35, 38, 77, 90, 124, 126], "note": [0, 10, 21, 33, 57, 67, 115, 116, 135], "doe": [0, 14, 63, 94, 118, 136], "mirror": [0, 5], "21": [0, 1, 3, 28, 29, 31, 38, 77, 90, 118, 124, 125, 126], "13049": 0, "13050": 0, "13051": 0, "13052": 0, "13053": 0, "22": [0, 1, 3, 31, 37, 77, 90, 124, 125, 126], "nbval_ignore_output": [0, 3], "lt": [0, 1], "0x1131744c0": 0, "gt": [0, 3, 35], "24": [0, 1, 3, 16, 31, 77, 127], "os_index_field": [0, 3, 5, 21, 35, 54, 55, 67], "_id": [0, 3, 5, 21, 35, 54, 67, 118, 136], "i": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 17, 18, 22, 27, 28, 29, 30, 31, 38, 42, 44, 45, 46, 49, 52, 53, 54, 55, 57, 62, 63, 69, 70, 82, 83, 94, 111, 115, 116, 118, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 136], "25": [0, 1, 3, 16, 18, 35, 37, 66, 118], "arrai": [0, 18, 38, 49, 90, 111, 129], "2656419677076": [0, 24, 49], "kibana": [0, 15, 49, 55, 94, 111, 116], "airlin": [0, 15, 49, 55, 94, 111, 116], "sunni": [0, 1, 66], "2018": [0, 5, 6, 7, 16, 27, 28, 29, 30, 35, 38, 90, 124, 125, 126, 127, 135], "01": [0, 1, 3, 5, 6, 7, 16, 28, 29, 30, 35, 38, 90, 118, 124, 125, 126, 127, 135], "00": [0, 1, 3, 5, 6, 7, 16, 30, 31, 35, 77, 90, 124, 127, 135], "9826615595518": [0, 24, 49], "logstash": [0, 15, 49, 55, 94, 111, 116], "airwai": [0, 15, 49, 55, 94, 111, 116], "clear": 0, "6369038508356": [0, 24, 49], "rain": 0, "7518761454494": 0, "02": [0, 1, 5, 6, 7, 16, 27, 31, 35, 38, 77, 90, 124, 125], "04": [0, 16, 31, 38, 45, 77, 90, 124, 125, 126, 127, 131], "09": [0, 16, 31, 35, 38, 77, 90, 124, 126, 127], "8144645388556": 0, "jetbeat": [0, 15, 55, 94, 116], "hail": 0, "08": [0, 3, 16, 31, 35, 77, 124, 127], "28": [0, 3, 5, 118, 125, 135], "1443369038839": 0, "54": [0, 29, 56, 88, 90, 91, 125, 131], "34": [0, 3, 31, 77, 107, 108], "26": [0, 1, 3, 58, 59, 64, 114, 118], "try": [0, 33], "except": [0, 48, 51, 113], "attributeerror": 0, "e": [0, 1, 5, 6, 7, 9, 116, 118, 136], "print": [0, 1, 3, 22, 23, 24, 35, 49, 111, 134], "method": [0, 3, 18, 22, 33, 50, 119, 134, 140, 141], "would": [0, 49, 52, 111], "scan": [0, 49, 52, 111], "scroll": [0, 49, 52, 111], "entir": [0, 3, 48, 49, 51, 52, 111, 113, 135], "": [0, 1, 3, 4, 5, 6, 7, 10, 18, 21, 36, 38, 41, 49, 52, 57, 67, 71, 72, 73, 74, 75, 84, 88, 90, 106, 109, 111, 117, 129, 134], "memori": [0, 4, 5, 22, 49, 52, 54, 111, 135], "If": [0, 1, 4, 6, 7, 11, 13, 16, 24, 36, 37, 42, 49, 52, 55, 88, 111], "explicitli": [0, 48, 51, 113], "requir": [0, 1, 36, 49, 52, 54, 111, 135], "suffici": 0, "call": [0, 6, 7, 18, 49, 52, 94, 111, 118, 136, 141], "ed": 0, "ed_df": 0, "true": [0, 1, 3, 5, 6, 7, 11, 13, 14, 16, 18, 23, 24, 26, 27, 28, 29, 30, 31, 35, 36, 38, 44, 45, 47, 48, 51, 53, 62, 63, 66, 88, 113, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136], "33": [0, 3, 5, 88, 124, 125, 135], "05": [0, 5, 16, 124, 127, 131, 135], "29": [0, 3, 124, 135], "42": [0, 3, 125, 126, 131], "41": [0, 35, 118], "57": [0, 38, 90, 126], "30": [0, 3, 16, 37, 90, 127], "31": [0, 3, 5, 16, 124, 127], "32": [0, 3, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "name": [0, 1, 3, 6, 7, 8, 14, 15, 23, 24, 25, 38, 55, 56, 57, 58, 59, 63, 64, 76, 77, 78, 79, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 111, 113, 114, 116, 118, 136, 145], "35": [0, 3, 16, 100, 101, 126], "frankfurt": [0, 17], "am": [0, 17, 35], "main": [0, 1, 17], "airport": [0, 17, 46], "cape": [0, 17], "town": [0, 17], "intern": [0, 17, 35, 46, 118], "venic": [0, 17], "marco": [0, 17], "polo": [0, 17], "napl": 0, "licenciado": [0, 46], "benito": [0, 46], "juarez": [0, 46], "pisa": [0, 46], "winnipeg": [0, 46], "jame": [0, 46], "armstrong": [0, 46], "richardson": [0, 46], "internat": 0, "itami": [0, 46], "adelaid": [0, 46], "list": [0, 3, 5, 6, 7, 9, 14, 16, 35, 36, 38, 63, 90, 116, 118, 119, 120, 121, 129, 136], "input": [0, 4, 66, 140], "current": [0, 1, 4, 5, 6, 7, 10, 16, 27, 28, 30, 37, 45, 54, 57, 72, 73, 74, 75, 109, 118], "36": [0, 3, 5, 16, 31, 56, 58, 59, 64, 76, 77, 78, 79, 89, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 107, 108, 114, 135], "typeerror": 0, "unhash": 0, "37": [0, 16, 56, 91, 135], "900": 0, "960": 0, "869736": 0, "975": 0, "812632": 0, "38": [0, 3, 31, 56, 77, 127, 131], "311": 0, "946": 0, "358410": 0, "51": [0, 5, 38, 107, 108, 127], "651": 0, "383864": 0, "03": [0, 6, 7, 16, 45, 124, 131], "950": [0, 3], "907": 0, "836523": 0, "12820": 0, "909": 0, "973606": 0, "12906": 0, "983": 0, "429244": 0, "06": [0, 3, 5, 6, 7, 16, 29, 31, 45, 77, 124, 125, 127, 131], "58": [0, 31, 77, 125], "12918": 0, "1136": 0, "678150": 0, "12919": 0, "1105": 0, "211803": 0, "13013": 0, "1055": 0, "350213": 0, "68": [0, 118], "qualifi": 0, "fail": [0, 118, 136], "aggreg": [0, 6, 9, 33, 54, 116, 120, 138], "std": [0, 3, 6, 7, 10, 26, 57, 138, 145], "261629e": [0, 6, 7], "07": [0, 3, 6, 7, 118, 125], "204365e": [0, 6, 7, 45], "000000e": [0, 6, 7], "000205e": [0, 6, 7], "578438e": 0, "663969e": 0, "onli": [0, 3, 6, 7, 9, 10, 33, 41, 57, 94, 116], "numer": [0, 3, 10, 26, 27, 28, 29, 30, 31, 33, 44, 45, 53, 57, 72, 73, 74, 75, 109, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "43": [0, 38, 135], "578614e": [0, 6, 7], "664071e": [0, 6, 7], "44": [0, 16, 31, 77, 126, 127], "45": [0, 3, 28, 36, 42, 118, 124, 127, 131], "46": [0, 3, 31, 33, 38, 77, 122, 126, 128], "628": [0, 10, 28, 57, 73], "253689": [0, 10, 28, 57], "7092": 0, "142455": 0, "511": 0, "127842": 0, "835975": [0, 28], "266": [0, 6, 7, 10, 44, 57, 88, 106], "396861": 0, "4578": [0, 6, 7], "438497": 0, "334": 0, "753952": 0, "939439": 0, "100": [0, 1, 3, 6, 7, 10, 16, 30, 57, 75, 96, 120, 121, 127], "020528": 0, "409": 0, "893816": 0, "2459": 0, "705673": 0, "252": 0, "333192": 0, "50": [0, 3, 27, 38, 90, 126], "640": [0, 29, 38, 74], "556668": 0, "7610": 0, "330866": 0, "503": 0, "045170": 0, "75": [0, 3, 38, 90, 118], "842": [0, 38], "185470": 0, "9736": 0, "637600": 0, "720": 0, "416036": 0, "1199": [0, 10, 16, 27, 57, 72, 120, 121, 124], "729053": 0, "19881": 0, "482315": 0, "1902": 0, "902032": 0, "mai": [0, 118, 136, 138], "vari": [0, 10, 57], "due": 0, "47": [0, 10, 16, 118, 125, 127], "128494": [0, 28], "407061": [0, 44], "334664": [0, 44], "766770": 0, "939513": [0, 44], "020531": [0, 10, 16, 30, 57, 120, 121, 127], "410": 0, "008918": 0, "251": [0, 16, 130], "938710": 0, "387285": [0, 38], "148975": 0, "213490": [0, 38], "505705": 0, "729004": [0, 10, 16, 27, 57, 120, 121, 124], "901978": 0, "48": [0, 90, 125, 126], "class": [0, 5, 22, 48, 49, 54, 55, 111, 119, 135, 136, 140], "entri": [0, 22], "total": [0, 1, 3, 22, 94, 118], "non": [0, 9, 22, 27, 28, 30, 36, 45, 72, 73, 74, 75, 82, 83, 88, 109], "null": [0, 19, 20, 22], "23": [0, 1, 3, 4, 27, 29, 31, 38, 77, 90, 124, 125, 126], "usag": [0, 18, 22, 66], "mb": 0, "49": 0, "64": [0, 118], "000": [0, 3, 126], "byte": [0, 34, 86], "storag": [0, 22], "714": 0, "numeric_onli": [0, 6, 7, 16, 26, 27, 28, 29, 30, 31, 38, 44, 45, 53, 71, 72, 73, 74, 75, 106, 109, 117, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132], "12353": 0, "780369": 0, "360": [0, 10, 35], "715034": 0, "482422": 0, "780273": 0, "52": [0, 35, 100, 101], "53": [0, 31, 35, 56, 58, 59, 64, 76, 77, 78, 79, 89, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 107, 108, 114, 126], "4406": 0, "853013": 0, "251168": 0, "335171": [0, 10], "518797": 0, "55": [0, 3, 37, 38, 56, 125], "142457": 0, "853010": 0, "56": [0, 118, 125, 126], "678000e": [0, 45], "754909e": 0, "280000e": 0, "181500e": 0, "112470e": 0, "674818e": 0, "703500e": [0, 45], "156": 0, "59": [0, 90, 124], "60": [0, 35, 39, 48, 51, 113], "se": [0, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "bd": 0, "IT": 0, "ch": 0, "zh": 0, "ru": [0, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "amu": 0, "dc": 0, "61": [0, 118], "62": [0, 118], "hist": [0, 3, 138, 145], "figsiz": [0, 3, 18, 66], "show": [0, 1, 3, 66, 135], "63": [0, 16], "oml_flights2": 0, "65": [0, 3], "os_info": [0, 3, 138, 145], "os_index_pattern": [0, 3, 5, 35, 55], "is_source_field": [0, 3, 35], "map": [0, 3, 12, 33, 35, 42, 55, 61, 118, 136], "capabl": [0, 3, 4, 35], "os_field_nam": [0, 3, 35], "is_sourc": [0, 3, 35], "os_dtyp": [0, 3, 35, 138, 145], "os_date_format": [0, 3, 35], "pd_dtype": [0, 3, 35], "is_search": [0, 3, 35], "is_aggregat": [0, 3, 35], "is_script": [0, 3, 35], "aggregatable_os_field_nam": [0, 3, 35], "date": [0, 4, 34, 35, 86], "strict_date_hour_minute_second": [0, 35], "keyword": [0, 3, 6, 7, 9, 33, 34, 35, 36, 86, 88, 116, 136], "none": [0, 1, 3, 5, 6, 7, 11, 14, 15, 16, 18, 22, 24, 27, 28, 29, 30, 35, 36, 38, 40, 41, 44, 45, 47, 48, 49, 51, 53, 54, 55, 63, 66, 71, 72, 73, 74, 75, 88, 103, 106, 109, 111, 113, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 136], "integ": [0, 35, 64, 95], "oper": [0, 6, 7, 11, 16, 35, 54, 56, 58, 59, 64, 76, 78, 79, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 114, 140], "task": [0, 3, 35], "boolean_filt": [0, 3, 35], "must": [0, 3, 5, 6, 7, 35, 37, 42, 54], "term": [0, 3, 35, 116], "rang": [0, 3, 35, 54], "sort_field": [0, 3, 35], "_doc": [0, 3, 23, 24, 35], "size": [0, 3, 5, 35, 118, 138, 145], "sort_param": [0, 3, 35], "desc": [0, 3, 35], "_sourc": [0, 3, 35, 118], "bodi": [0, 3, 35, 36, 88], "post_process": [0, 3, 35], "sort_index": [0, 3, 23, 24, 35], "provid": [1, 10, 57], "walkthrough": 1, "guidanc": 1, "user": [1, 11, 33, 36, 39], "In": [1, 4, 48, 49, 51, 52, 54, 111, 113], "you": [1, 3, 4, 37], "opensearch_py_ml": [1, 3, 5, 14, 16, 17, 21, 22, 23, 24, 35, 36, 37, 39, 40, 41, 46, 49, 50, 55, 56, 58, 59, 63, 64, 67, 69, 70, 76, 78, 79, 82, 83, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 111, 114, 115, 116, 118, 119, 134, 135, 136], "accomplish": 1, "follow": [1, 24, 48, 51, 113], "instal": 1, "through": [1, 4], "pypi": [1, 4], "sentence_transformer_model": 1, "sentencetransformermodel": 1, "mlcommon": [1, 4, 140], "later": [1, 3], "ml_commons_integr": [1, 134], "mlcommoncli": [1, 134], "get": [1, 138], "With": [1, 24], "zip": [1, 134], "file": [1, 3, 47, 118, 134, 140], "can": [1, 3, 5, 9, 18, 24, 33, 36, 48, 51, 54, 55, 113, 116, 135], "The": [1, 5, 8, 10, 12, 14, 17, 19, 20, 23, 24, 26, 34, 44, 46, 53, 54, 55, 57, 61, 63, 86, 135], "function": [1, 4, 6, 7, 17, 36, 46, 88, 120, 121, 140], "synthest": 1, "load": [1, 54, 135], "exampl": [1, 3, 4], "descript": [1, 10, 57, 140], "paramet": [1, 3], "read_path": 1, "str": [1, 5, 6, 7, 14, 16, 23, 24, 35, 36, 39, 47, 54, 55, 63, 87, 88, 94, 113, 118, 119, 120, 121, 134, 136], "path": [1, 134], "gener": [1, 4, 10, 33, 40, 57, 116, 140], "default": [1, 5, 6, 7, 14, 15, 16, 17, 19, 20, 23, 24, 27, 28, 29, 30, 31, 36, 38, 40, 44, 45, 46, 53, 54, 63, 77, 88, 90, 116, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136], "synthetic_queri": 1, "folder": 1, "directori": 1, "model_id": 1, "download": 1, "msmarco": 1, "distilbert": 1, "base": [1, 9, 17, 41, 46, 55], "ta": 1, "b": [1, 118, 136], "output_model_path": 1, "store": [1, 4, 5, 134], "custom": [1, 24, 118], "output_model_nam": 1, "trained_model": 1, "pt": 1, "zip_file_nam": 1, "custom_tasb_model": 1, "use_acceler": 1, "acceler": 1, "ar": [1, 3, 4, 6, 7, 9, 11, 12, 14, 16, 18, 19, 20, 27, 28, 29, 30, 36, 38, 42, 44, 45, 53, 55, 61, 63, 72, 73, 74, 75, 88, 109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 138, 140, 141], "multipl": [1, 9, 31, 36, 77, 78, 79, 97, 98, 134], "gpu": 1, "avail": [1, 3, 141], "machin": 1, "recommend": [1, 4], "num_processor": 1, "speeed": 1, "progress": [1, 135], "run": [1, 3], "auto": 1, "setup": 1, "confi": 1, "launch": 1, "train_model": 1, "processor": 1, "NOT": [1, 36], "trigger": 1, "compute_environ": 1, "comput": [1, 38, 90, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 140], "environ": 1, "local_machin": 1, "num_machin": 1, "int": [1, 6, 7, 14, 17, 19, 20, 22, 31, 32, 36, 38, 40, 43, 46, 63, 65, 71, 72, 73, 74, 75, 77, 81, 84, 88, 90, 103, 105, 106, 109, 110, 116, 117, 129, 136], "num_process": 1, "learning_r": 1, "float": [1, 34, 38, 40, 58, 59, 71, 72, 73, 74, 75, 86, 90, 103, 106, 109, 114, 117, 129], "learn": 1, "rate": 1, "2e": 1, "num_epoch": 1, "epoch": 1, "verbos": [1, 22, 118], "plot": [1, 18, 66, 140], "clean": 1, "cach": [1, 42], "befor": [1, 118, 136, 141], "free": 1, "space": 1, "gc": 1, "torch": 1, "collect": [1, 68], "cuda": 1, "empty_cach": 1, "home": 1, "ec2": 1, "sagemak": 1, "mingshl": 1, "test_model": 1, "overwrit": [1, 136], "output": [1, 4, 10, 51, 57, 135, 140], "p": 1, "773": 1, "781628": 1, "98it": 1, "config": 1, "huggingfac": 1, "default_config": 1, "yaml": 1, "deepspeed_config": 1, "gradient_accumulation_step": 1, "offload_optimizer_devic": 1, "offload_param_devic": 1, "zero3_init_flag": 1, "zero_stag": 1, "distributed_typ": 1, "deepspe": 1, "downcast_bf16": 1, "fsdp_config": 1, "machine_rank": 1, "main_process_ip": 1, "main_process_port": 1, "main_training_funct": 1, "mixed_precis": 1, "use_cpu": 1, "start": 1, "20the": 1, "25the": 1, "84it": 1, "67it": 1, "38it": 1, "26it": 1, "07it": 1, "19it": 1, "96it": 1, "28it": 1, "22it": 1, "32it": 1, "74it": 1, "49it": 1, "68it": 1, "09it": 1, "66it": 1, "55it": 1, "89it": 1, "77it": 1, "86it": 1, "64it": 1, "87it": 1, "05it": 1, "70it": 1, "40it": 1, "57it": 1, "00it": 1, "85it": 1, "20it": 1, "39643096923828": 1, "410019636154175": 1, "prepar": 1, "messag": [1, 118, 134], "indic": [1, 5, 69, 70, 82, 83, 118, 135], "shown": 1, "abov": 1, "But": 1, "other": [1, 68, 88], "pretrain": 1, "save_as_pt": 1, "pre": [1, 18], "inferenc": 1, "benchmark": 1, "proper": 1, "format": 1, "script": 1, "along": 1, "token": 1, "configur": [1, 5], "take": [1, 36, 88], "argument": [1, 5, 6, 7, 10, 27, 28, 30, 33, 36, 39, 45, 57, 72, 73, 74, 75, 88, 109, 113, 116], "directli": [1, 3, 18, 141], "convert": [1, 50, 118, 135, 136], "its": [1, 14, 63], "json": [1, 134], "open": 1, "search": [1, 14, 35, 36, 63, 88, 116, 118], "todai": 1, "els": 1, "model_nam": 1, "g": [1, 5, 6, 7, 9, 136], "sample_model": 1, "add": [1, 9, 10, 39, 57, 91, 94, 145], "extens": 1, "id": [1, 134], "contain": [1, 3, 5, 15, 16, 40, 41, 55, 115, 135, 141], "common": [1, 134], "upload_model": [1, 143], "three": 1, "agrument": 1, "model_config": 1, "model_path": [1, 134], "expect": [1, 134], "should": [1, 116, 141], "two": [1, 5], "first": [1, 3, 4, 17, 19, 20, 24, 56, 115, 118, 134], "second": 1, "model_config_fil": 1, "which": [1, 3, 4, 6, 7, 14, 27, 28, 29, 30, 31, 36, 38, 44, 45, 53, 54, 63, 88, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132], "necessari": 1, "info": [1, 3, 14, 63, 138], "version": [1, 4], "etc": 1, "detail": [1, 10, 22, 57, 113], "here": [1, 3], "org": 1, "doc": 1, "latest": 1, "plugin": [1, 134], "serv": 1, "framework": 1, "below": [1, 10, 57], "cell": [1, 9], "ml_common": 1, "ml_client": 1, "need": [1, 37], "sampl": [1, 138, 145], "all": [1, 3, 6, 7, 18, 27, 28, 29, 30, 31, 36, 38, 44, 45, 53, 88, 109, 115, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 135, 140], "minilm": 1, "l6": 1, "v2": 1, "model_format": 1, "torch_script": 1, "model_task_typ": 1, "text_embed": 1, "model_typ": 1, "bert": 1, "embedding_dimens": 1, "384": 1, "framework_typ": 1, "sentence_transform": 1, "all_config": 1, "_name_or_path": 1, "nreimer": 1, "h384": 1, "uncas": 1, "architectur": 1, "bertmodel": 1, "attention_probs_dropout_prob": 1, "gradient_checkpoint": 1, "hidden_act": 1, "gelu": 1, "hidden_dropout_prob": 1, "hidden_s": 1, "initializer_rang": 1, "intermediate_s": 1, "1536": 1, "layer_norm_ep": 1, "1e": 1, "max_position_embed": 1, "512": 1, "num_attention_head": 1, "num_hidden_lay": 1, "pad_token_id": 1, "position_embedding_typ": 1, "absolut": [1, 71, 123, 126], "transformers_vers": 1, "type_vocab_s": 1, "use_cach": 1, "vocab_s": 1, "30522": 1, "save_pre_trained_model_json": 1, "isverbos": [1, 134], "chunk": [1, 134], "sha1": 1, "valu": [1, 3, 6, 7, 10, 11, 15, 16, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 38, 44, 45, 47, 49, 53, 54, 57, 69, 70, 71, 72, 73, 74, 75, 77, 82, 83, 84, 90, 106, 109, 111, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 138], "d1fc88bc317ed3dc52c4c7dc4d51122c6989876e62167566289a8067ab5d51e7": 1, "meta": 1, "data": [1, 4, 5, 6, 7, 10, 12, 17, 18, 22, 23, 24, 34, 36, 46, 47, 48, 54, 57, 60, 61, 85, 86, 88, 118, 120, 121, 136, 140], "wa": [1, 3, 94], "successfulli": 1, "oglvm4qbdmk7aze7yw": 1, "d": [1, 18, 136], "statu": 1, "demo": [2, 4], "notebook": [2, 4, 48], "datafram": [2, 3, 54, 56, 57, 58, 59, 61, 63, 64, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 140, 141], "onlin": [2, 4], "retail": [2, 4], "analysi": [2, 4], "sentenc": [2, 4, 140], "transform": [2, 4, 140], "model": [2, 4, 134, 140], "train": [2, 4, 140], "save": [2, 4], "upload": [2, 4, 134, 140], "opensearch": [2, 3, 5, 8, 9, 12, 21, 22, 23, 24, 25, 33, 34, 35, 36, 37, 42, 47, 48, 49, 52, 54, 55, 61, 67, 85, 86, 88, 94, 104, 111, 115, 116, 118, 134, 135, 136, 140], "panda": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 60, 61, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 81, 82, 83, 84, 86, 90, 94, 105, 106, 109, 111, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 140], "To": 3, "let": 3, "read": [3, 4, 36, 88, 118, 135, 136], "csv": [3, 47, 118], "popul": [3, 39, 136], "local": 3, "df": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 39, 41, 42, 44, 45, 46, 53, 56, 57, 58, 59, 61, 64, 66, 67, 76, 78, 79, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 114, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "csv_to_opensearch": [3, 142], "gz": 3, "os_client": [3, 5, 55, 118, 136], "os_dest_index": [3, 118, 136], "es_if_exist": 3, "replac": [3, 118, 136], "os_dropna": [3, 118, 136], "es_refresh": 3, "compress": [3, 47, 118], "gzip": 3, "index_col": [3, 118], "we": [3, 4, 6, 7, 18, 24, 33, 48, 51, 113, 116], "see": [3, 18, 22, 25, 66], "field": [3, 5, 8, 9, 17, 21, 23, 24, 25, 33, 36, 46, 54, 55, 67, 88, 94, 116, 136], "us": [3, 4, 5, 6, 7, 9, 16, 17, 33, 36, 37, 38, 40, 46, 54, 66, 88, 90, 118, 120, 121, 129, 134, 136, 138, 141], "our": 3, "next": 3, "check": [3, 36, 88], "when": [3, 6, 7, 36, 48, 51, 88, 113, 136], "instanti": 3, "allow": [3, 4], "one": [3, 6, 7], "choos": 3, "subset": [3, 5, 14, 41, 63], "your": [3, 4, 17, 46], "sinc": 3, "didn": 3, "t": [3, 4, 31, 36, 54, 57, 88, 134], "have": [3, 9], "access": [3, 4, 54], "countri": 3, "customerid": 3, "invoiced": 3, "invoiceno": 3, "quantiti": [3, 94], "stockcod": 3, "unitpric": 3, "dtype": [3, 8, 9, 15, 19, 20, 22, 23, 26, 27, 28, 29, 30, 33, 34, 38, 41, 44, 45, 49, 53, 55, 56, 57, 58, 59, 64, 76, 77, 78, 79, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 111, 113, 114, 116, 118, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136, 138, 145], "now": [3, 118], "also": [3, 54], "offer": 3, "about": [3, 22, 36, 88], "underli": [3, 5, 60, 85, 94, 140], "It": [3, 17, 46], "inform": [3, 10, 22, 57], "being": [3, 24], "pass": [3, 6, 7, 36, 88], "more": [3, 6, 7, 10, 36, 57, 88, 134], "doubl": 3, "long": [3, 136], "understand": 3, "how": [3, 116, 118, 136], "attribut": [3, 140], "much": 3, "last": [3, 46], "respect": 3, "unit": 3, "kingdom": 3, "17850": 3, "85123a": 3, "71053": 3, "count": [3, 6, 7, 10, 18, 22, 31, 35, 57, 116, 138], "14998": 3, "17419": 3, "21773": 3, "14999": 3, "22149": 3, "specifi": [3, 6, 7, 11, 14, 36, 40, 63, 88, 116], "order": [3, 17, 36, 46, 88, 115, 118], "2010": 3, "filter": [3, 17, 19, 20, 31, 36, 37, 38, 40, 46, 88, 129, 138, 145], "under": [3, 37], "hood": 3, "queri": [3, 9, 35, 36, 37, 42, 54, 88, 104, 138], "construct": [3, 5], "vector": 3, "germani": 3, "1109": 3, "12662": 3, "22809": 3, "95": 3, "1110": 3, "84347": 3, "1111": 3, "84945": 3, "85": 3, "1112": 3, "22242": 3, "1113": 3, "22244": 3, "isin": [3, 145], "state": [3, 118], "84406b": 3, "84029g": 3, "84029e": 3, "combin": [3, 6, 7, 88, 120, 121], "further": [3, 4], "90": 3, "translat": 3, "begin": 3, "ask": 3, "some": 3, "question": 3, "answer": 3, "mani": [3, 116, 141], "differ": [3, 54, 115], "nuniqu": [3, 122, 138, 145], "what": [3, 4, 10, 23, 24, 57], "sum": [3, 6, 7, 138, 145], "product": [3, 31], "111960": 3, "me": 3, "mean": [3, 6, 7, 10, 16, 57, 138, 145], "min": [3, 6, 7, 10, 16, 57, 120, 121, 138, 145], "max": [3, 6, 7, 10, 16, 57, 120, 121, 138, 145], "qunat": 3, "unit_pric": 3, "agg": [3, 7, 16, 138], "61548": 3, "490000": [3, 58, 59, 114], "103233": 3, "2880": 3, "990000": [3, 58, 59, 114], "9360": 3, "give": [3, 22, 140], "describ": [3, 138, 145], "10729": 3, "15000": 3, "15590": 3, "776680": 3, "464000": 3, "1764": 3, "189592": 3, "930116": 3, "106214": 3, "12347": 3, "14222": 3, "689466": 3, "250000": 3, "15668": 3, "019608": 3, "510000": 3, "17218": 3, "806604": 3, "472000": 3, "212788": 3, "18239": 3, "histogram": [3, 18, 66], "bin": [3, 18, 66], "log": 3, "13748": 3, "22086": 3, "83": [3, 118], "15291": 3, "21733": 3, "96": [3, 10, 88], "14688": 3, "21212": 3, "102": [3, 16, 120, 121, 127], "85071b": 3, "176": [3, 56], "16029": 3, "85099c": 3, "14784": 3, "15061": 3, "22423": 3, "14785": 3, "22075": 3, "14788": 3, "17038": 3, "14974": 3, "14739": 3, "21704": 3, "72": 3, "14980": 3, "22178": 3, "258": 3, "string": [3, 6, 7, 36, 88, 113, 134], "concaten": 3, "kingdom85123a": 3, "kingdom71053": 3, "kingdom84406b": 3, "kingdom84029g": 3, "kingdom84029": 3, "14995": 3, "kingdom72349b": 3, "14996": 3, "kingdom72741": 3, "14997": 3, "kingdom22762": 3, "kingdom21773": 3, "kingdom22149": 3, "nov": 4, "2022": 4, "1": [4, 5, 6, 7, 11, 14, 15, 17, 18, 19, 20, 22, 23, 24, 27, 31, 33, 37, 38, 40, 44, 45, 49, 55, 56, 58, 59, 63, 64, 76, 77, 78, 79, 81, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 111, 114, 118, 123, 125, 126, 129, 130, 131, 135, 136], "0": [4, 5, 6, 7, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 28, 29, 30, 31, 33, 36, 38, 44, 49, 53, 55, 56, 58, 59, 63, 64, 66, 76, 77, 78, 79, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 111, 114, 118, 120, 121, 123, 125, 127, 129, 130, 131, 132, 135, 136], "0b1": 4, "link": [4, 39, 94], "sourc": [4, 5, 7, 9, 11, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 31, 35, 36, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 51, 54, 55, 57, 63, 65, 68, 69, 71, 72, 73, 74, 75, 77, 82, 84, 87, 88, 90, 94, 103, 106, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135], "repositori": 4, "issu": [4, 9], "idea": 4, "python": [4, 55], "client": [4, 5, 55, 118, 136], "explor": 4, "analyz": [4, 10, 36, 57, 88], "familiar": 4, "compat": [4, 41], "api": [4, 5, 21, 55, 67, 134], "experiment": 4, "project": [4, 9], "where": [4, 5, 27, 28, 29, 30, 38, 44, 45, 53, 123, 124, 125, 126, 127, 128, 130, 131, 132], "possibl": [4, 5, 27, 28, 29, 30, 33, 38, 44, 45, 53, 123, 124, 125, 126, 127, 128, 130, 131, 132], "packag": 4, "exist": [4, 9, 11, 54, 82, 83, 118, 136], "structur": [4, 5, 135], "make": [4, 18], "easi": 4, "switch": 4, "between": [4, 38, 90, 115, 129], "scikit": 4, "power": [4, 89, 99], "equival": [4, 11], "resid": 4, "larg": [4, 135], "dataset": [4, 10, 37, 57], "relat": [4, 118], "work": [4, 6, 7, 36, 88], "updat": [4, 42], "pleas": 4, "don": [4, 31, 57], "until": 4, "notic": 4, "look": 4, "document": [4, 9, 40, 54], "re": [4, 14, 63, 115], "new": [4, 11, 31, 94, 118, 136], "refer": [4, 10, 55, 57], "seri": [4, 6, 7, 9, 10, 12, 14, 15, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 33, 34, 36, 43, 44, 45, 53, 118, 136, 140, 141], "util": [4, 50, 140], "licens": 4, "contribut": 4, "code": [4, 22, 118], "conduct": 4, "option": [5, 6, 7, 14, 15, 16, 22, 23, 24, 27, 28, 29, 30, 36, 38, 40, 44, 45, 47, 53, 54, 55, 63, 71, 72, 73, 74, 75, 88, 103, 106, 109, 113, 117, 118, 120, 121, 135, 136], "column": [5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 57, 61, 63, 86, 88, 94, 104, 105, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 138], "_query_compil": [5, 55], "querycompil": [5, 54, 55, 119], "dimension": [5, 42, 104], "mutabl": 5, "potenti": 5, "heterogen": 5, "tabular": [5, 51], "label": [5, 6, 7, 8, 11, 14, 63, 140], "ax": [5, 18, 66], "referenc": [5, 21, 67, 135, 136], "rather": [5, 33, 116], "than": [5, 33, 54, 116], "index": [5, 6, 7, 8, 11, 14, 17, 19, 20, 22, 23, 24, 25, 34, 35, 39, 40, 46, 47, 48, 49, 51, 52, 55, 63, 86, 94, 111, 113, 118, 135, 136, 140], "pattern": [5, 55], "wildcard": [5, 55], "A": [5, 35, 36, 39, 55, 115, 134, 136], "pandas_api_doc": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 57, 60, 61, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 81, 82, 83, 84, 90, 94, 105, 106, 109, 111, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "opensearch_test_cli": [5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 49, 53, 55, 56, 57, 58, 59, 61, 64, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 111, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136], "head": [5, 23, 24, 37, 49, 56, 58, 59, 64, 76, 78, 79, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 111, 114, 135, 138, 145], "x": [5, 11, 16, 17, 23, 24, 35, 36, 37, 46, 49, 88, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 135, 136], "todo": [5, 9, 10, 27, 28, 30, 33, 39, 45, 54, 57, 72, 73, 74, 75, 109, 116, 118], "index_field": 5, "01t00": 5, "772": 5, "100846": 5, "159": 5, "990962": 5, "800": 5, "217104": 5, "803": 5, "015200": 5, "func": [6, 7, 120, 121], "union": [6, 7, 14, 15, 16, 23, 36, 38, 63, 68, 88, 90, 118, 120, 121, 129, 136], "axi": [6, 7, 11, 14, 19, 20, 40, 63], "arg": [6, 7], "kwarg": [6, 7, 36, 88], "over": [6, 7, 19, 20, 23, 24, 36], "dict": [6, 7, 118, 136], "either": [6, 7, 14, 63], "klass": [6, 7], "appli": [6, 7, 14, 18, 36, 37, 63], "accept": [6, 7, 16, 120, 121], "mad": [6, 7, 138, 145], "median": [6, 7, 71, 123, 138, 145], "mode": [6, 7, 47, 138, 145], "quantil": [6, 7, 138, 145], "rank": [6, 7], "sem": [6, 7], "skew": [6, 7], "var": [6, 7, 106, 138, 145], "datatyp": [6, 7, 27, 28, 29, 30, 31, 38, 44, 45, 53, 118, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132], "nan": [6, 7, 10, 26, 27, 28, 29, 30, 31, 38, 44, 45, 48, 51, 53, 57, 113, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132], "nat": [6, 7, 26, 27, 28, 29, 30, 31, 38, 44, 45, 53, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132], "posit": [6, 7, 17, 46], "scalar": [6, 7], "singl": [6, 7, 9, 18, 36, 90], "sever": [6, 7], "astyp": [6, 7], "8204364": [6, 7, 109], "92616288": [6, 7], "assert": [8, 21, 67], "isinst": [8, 21, 67], "na": [9, 16, 19, 20, 69, 70, 82, 83], "each": [9, 12, 24, 26, 27, 28, 29, 30, 33, 34, 38, 44, 45, 53, 61, 69, 70, 82, 83, 86, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "against": [9, 36], "ineffici": [9, 54], "altern": [9, 11], "approach": 9, "value_count": [9, 145], "howev": [9, 18], "thei": [9, 57, 115], "aggregat": [9, 33, 116], "text": [9, 33, 36, 88, 116, 136], "For": [9, 11, 18, 54, 94, 135], "tag": 9, "addit": [9, 10, 36, 39, 56, 57, 88, 91], "featur": 9, "summari": [9, 10, 22, 35, 57], "ecommerc": [9, 11, 22, 31, 33, 36, 37, 42, 56, 58, 59, 64, 76, 77, 78, 79, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 114], "customer_first_nam": [9, 11, 22, 33, 37, 56], "geoip": [9, 22, 31, 37], "city_nam": [9, 22, 31, 37], "4675": [9, 11, 22, 42, 104], "4094": [9, 22], "statist": [10, 57], "summar": [10, 57], "central": [10, 57], "tendenc": [10, 57], "dispers": [10, 57], "shape": [10, 39, 57, 138, 145], "distribut": [10, 57], "exclud": [10, 19, 20, 41, 57], "both": [10, 57], "well": [10, 57], "mix": [10, 57], "depend": [10, 36, 57, 88], "percentil": [10, 57], "386661": [10, 57], "743006": 10, "level": 11, "inplac": 11, "error": [11, 36, 88, 118], "rais": [11, 36, 88, 118, 136], "request": [11, 19, 20, 136], "remov": [11, 24, 27, 28, 29, 30, 38, 44, 45, 53, 118, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136], "whether": [11, 69, 70, 82, 83], "multiindex": 11, "do": [11, 33, 54, 116, 136], "suppress": 11, "caller": 11, "email": 11, "eddi": [11, 36, 56], "underwood": 11, "famili": 11, "zzz": 11, "mari": [11, 37, 56], "bailei": 11, "gwen": [11, 56], "butler": 11, "dian": [11, 56], "chandler": 11, "weber": 11, "4670": 11, "lambert": 11, "4671": [11, 36], "jim": [11, 36], "gilbert": 11, "4672": [11, 36], "yahya": [11, 36], "rivera": 11, "4673": 11, "hampton": 11, "4674": [11, 22, 36], "jackson": [11, 36], "hopkin": 11, "goodwin": 11, "oliv": [11, 36], "rio": 11, "via": [12, 18, 36, 61], "_os_dtype_to_pd_dtyp": [12, 61], "__doc__": [12, 61], "determin": [13, 62, 116], "item": [14, 15, 40, 63], "sequenc": [14, 36, 63], "regex": [14, 63], "accord": [14, 63], "routin": [14, 63], "content": [14, 54, 63], "keep": [14, 63], "regular": [14, 24, 63], "express": [14, 19, 20, 39, 63], "By": [14, 24, 32, 36, 54, 63, 81, 135], "enforc": [14, 63], "mutual": [14, 63], "exclus": [14, 63], "kei": [15, 16, 138], "ani": [15, 24, 36, 48, 88, 90], "given": [15, 36, 38, 88, 90, 115, 129], "ex": 15, "found": 15, "dropna": [16, 18, 31, 118, 119, 136], "dataframegroupbi": [16, 138], "perform": 16, "group": [16, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "togeth": 16, "drop": [16, 138], "ed_flight": 16, "ae": [16, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "110": [16, 118, 120, 121, 127], "799911": [16, 120, 121, 127], "1126": [16, 120, 121, 124], "148682": [16, 120, 121, 124], "132": 16, "443756": 16, "817": [16, 129], "931030": 16, "125": [16, 120, 121, 127], "589394": [16, 120, 121, 127], "642822": [16, 120, 121, 124], "389603": 16, "1172": 16, "382568": 16, "AT": [16, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "1181": [16, 120, 121, 124], "835815": [16, 120, 121, 124], "tr": [16, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "307": 16, "915649": 16, "145966": [16, 120, 121, 127], "153069": 16, "1192": 16, "429932": 16, "za": [16, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "002663": [16, 120, 121, 127], "1196": [16, 120, 121, 124], "186157": [16, 120, 121, 124], "121": [16, 118], "280296": 16, "1175": 16, "709961": 16, "643": [16, 125], "956793": 16, "717949": 16, "388": 16, "828809": 16, "571429": 16, "673": 16, "551677": 16, "746154": 16, "682": 16, "197241": 16, "733333": 16, "647": 16, "158290": 16, "819936": 16, "598": 16, "063146": 16, "752014": 16, "579": [16, 129], "799066": 16, "767068": 16, "636": 16, "998605": 16, "738589": 16, "677": 16, "794078": 16, "928571": 16, "sort": [17, 23, 24, 46, 54, 115, 116], "quickli": [17, 46], "ha": [17, 21, 31, 33, 46, 54, 67, 77], "right": [17, 46, 56, 58, 59, 64, 76, 78, 79, 89, 107, 108, 114], "select": [17, 41, 46, 140], "sydnei": 17, "kingsford": 17, "smith": 17, "grid": [18, 66], "xlabels": [18, 66], "xrot": [18, 66], "ylabels": [18, 66], "yrot": [18, 66], "sharex": 18, "sharei": 18, "layout": 18, "kwd": [18, 66], "deriv": [18, 66, 118], "_core": [18, 66], "hist_fram": [18, 66], "ideal": 18, "weight": 18, "col": 18, "select_dtyp": [18, 138], "occurr": [19, 20, 37, 116], "maximum": [19, 27, 72], "oml_df": [19, 20, 31, 38, 49, 52, 129, 135, 136], "1843": 19, "109": 19, "1988": 19, "minimum": [20, 30, 75], "5454": 20, "veri": [21, 54, 67], "limit": [21, 67], "compar": [21, 67], "buf": [22, 48, 51, 113], "stringio": 22, "max_col": [22, 48, 51], "memory_usag": 22, "show_count": 22, "concis": 22, "full": [22, 36, 88], "copi": 22, "lot": [22, 54], "difficult": 22, "split": 22, "out": [22, 116], "appropri": 22, "sparsedatafram": 22, "incorrect": [22, 37], "iter": [23, 24, 118, 140], "tupl": [23, 24, 42, 104, 118, 136], "pair": [23, 24], "itertupl": [23, 138], "namedtupl": [23, 24], "element": [24, 43, 56, 58, 59, 64, 69, 70, 76, 78, 79, 82, 83, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 105, 107, 108, 114], "possibli": 24, "iterrow": [24, 138], "69421554118": [24, 49], "041778346198": [24, 49], "yield": 24, "deviat": [26, 44, 71, 106, 123, 126, 130], "213": [26, 71], "35497": 26, "00000": 26, "473011": 26, "484": 26, "implement": [27, 28, 30, 33, 45, 48, 49, 51, 52, 72, 73, 74, 75, 109, 111, 113, 116], "remaind": [27, 28, 30, 33, 45, 72, 73, 74, 75, 109, 116], "preserv": [27, 28, 29, 30, 38, 44, 45, 53, 123, 124, 125, 126, 127, 128, 130, 131, 132], "73": [27, 78, 79], "254": [28, 118], "83598": 28, "564438232": 28, "363": 29, "624776611": 29, "362667": 29, "387": 29, "021": 30, "os_siz": [31, 77, 116], "calcul": [31, 38, 77, 90, 129], "consid": 31, "oml_ecommerc": [31, 77], "total_quant": [31, 56, 58, 59, 64, 76, 78, 79, 89, 94, 99, 104, 107, 108, 114], "customer_birth_d": [31, 33], "day_of_week": [31, 77], "taxful_total_pric": [31, 56, 58, 59, 64, 76, 78, 79, 88, 89, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 107, 108, 114], "york": 31, "thursdai": [31, 77], "98": [31, 56, 58, 59, 64, 76, 78, 79, 88, 89, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 107, 108, 114], "tax_amount": 31, "order_d": [31, 77], "2016": [31, 77], "definit": [32, 81], "cardin": [33, 138], "ignore_abov": 33, "256": [33, 130], "categori": [33, 36, 88], "currenc": [33, 36], "debug": 35, "compil": 35, "tail": [35, 138, 145], "12608": 35, "cyeg": 35, "120": 35, "12720": 35, "40": [35, 58, 59, 64, 114, 125, 126], "bhm": 35, "255": [35, 122, 128, 130], "12725": 35, "atl": 35, "12823": 35, "ngo": 35, "12907": 35, "lim": 35, "225": 35, "match_phras": [36, 88], "must_not_match": 36, "multi_match_typ": 36, "match_only_text_field": [36, 88], "fuzzi": [36, 88], "match": [36, 88, 136], "multi_match": 36, "within": [36, 37, 115], "otherwis": [36, 43, 62, 105], "specif": [36, 116], "instead": [36, 88], "account": [36, 88, 118], "boolean": [36, 39, 88, 134], "prevent": [36, 88], "aren": [36, 88], "properli": [36, 88], "men": [36, 88], "cloth": [36, 88], "eur": 36, "accessori": [36, 88], "shoe": [36, 88], "abd": 36, "4663": 36, "samir": 36, "4667": 36, "sultan": 36, "women": [36, 88], "2310": 36, "dsl": 37, "dictionari": 37, "geo": 37, "distanc": 37, "_": 37, "point": 37, "locat": 37, "geo_dist": 37, "1km": 37, "dubai": 37, "rabbia": 37, "al": 37, "robbi": 37, "nest": 37, "correct": 37, "q": [38, 90, 129], "361": 38, "040768": 38, "296587520": 38, "637076736": 38, "658119680": 38, "expr": 39, "guid": 39, "pandas_user_guid": 39, "2730": 39, "frac": [40, 103], "random_st": [40, 103], "randomli": 40, "fraction": 40, "cannot": 40, "seed": 40, "random": 40, "datetim": 41, "repres": [42, 43, 104, 105], "len": [42, 104], "407": 44, "93951": 44, "20436e": 45, "1678": 45, "37035": 45, "xi": 46, "xianyang": 46, "zurich": 46, "ukrainka": 46, "air": [46, 116], "ministro": 46, "pistarini": 46, "washington": 46, "dull": 46, "path_or_buf": 47, "sep": [47, 118], "na_rep": [47, 48, 51, 113], "float_format": [47, 48, 51, 113], "header": [47, 48, 51, 113, 118], "index_label": 47, "w": 47, "encod": [47, 118], "infer": [47, 118], "quot": [47, 118], "quotechar": [47, 118], "line_termin": 47, "chunksiz": [47, 118, 136], "tupleize_col": 47, "date_format": 47, "doublequot": [47, 118], "escapechar": [47, 118], "decim": [47, 48, 51, 118], "write": 47, "comma": [47, 118], "separ": [47, 118], "col_spac": [48, 51], "formatt": [48, 51], "sparsifi": [48, 51], "index_nam": [48, 51], "justifi": [48, 51], "max_row": [48, 51, 113], "show_dimens": [48, 51], "bold_row": 48, "escap": 48, "border": 48, "table_id": 48, "render_link": 48, "render": [48, 51, 113], "html": 48, "tabl": 48, "scenario": [48, 51, 113], "avoid": [48, 51, 113], "accident": [48, 51, 113], "dump": [48, 51, 113], "overridden": [48, 51, 113], "Not": [49, 52, 111], "represent": [49, 52, 111, 113], "involv": [49, 52, 111], "bewar": [49, 52, 111], "pd_df": [49, 135, 136], "f": [49, 111, 136], "ntype": [49, 111], "show_progress": [50, 112, 135], "line_width": 51, "consol": 51, "friendli": 51, "to_numpi": [52, 138, 145], "varianc": [53, 117, 132], "70964": [53, 117], "570234": 53, "111987": 53, "761279": 53, "76128": 53, "query_compil": [54, 119], "behaviour": 54, "slice": 54, "docvalu": 54, "so": [54, 55, 136, 138], "discourag": 54, "case": 54, "advis": 54, "duplic": 54, "anoth": 54, "doc_valu": 54, "enabl": 54, "proxi": 55, "o": [55, 118, 136], "delet": [55, 118, 136], "chang": [55, 94], "after": [55, 136], "rebuilt": 55, "inconsist": 55, "occur": 55, "wise": [56, 58, 59, 64, 76, 78, 79, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 114], "binari": [56, 58, 59, 64, 76, 78, 79, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 114, 140], "199": [56, 58, 59, 64, 76, 78, 79, 89, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 107, 108, 114], "174": [56, 58, 59, 64, 76, 78, 79, 89, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 107, 108, 114], "80": [56, 58, 59, 64, 76, 78, 79, 89, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 107, 108, 114], "980000": [56, 76, 91, 100, 101, 107, 108], "200": [56, 88, 91], "979996": [56, 76, 91, 100, 101, 107, 108], "175": [56, 91], "81": [56, 91], "980003": [56, 76, 91, 100, 101, 107, 108], "201": 56, "82": 56, "customer_last_nam": 56, "eddieunderwood": 56, "marybailei": 56, "gwenbutl": 56, "dianechandl": 56, "eddieweb": 56, "divis": [58, 59, 64, 92, 93, 95, 102, 114], "truediv": [58, 59, 145], "99": [58, 59, 64, 114, 118], "989998": [58, 59, 114], "87": [58, 59, 64, 114], "489998": [58, 59, 114], "490002": [58, 59, 114], "draw": 66, "import": [66, 118], "alpha": 66, "densiti": 66, "booleanfilt": [68, 69, 70, 82, 83], "detect": [69, 70, 82, 83], "miss": [69, 70, 82, 83, 118, 136], "mask": [69, 70, 82, 83], "isna": [70, 145], "modulo": [76, 96], "959999": [78, 79], "107": [78, 79, 118], "399": [78, 79], "959991": [78, 79], "349": [78, 79], "161": [78, 79, 118], "960007": [78, 79], "mul": [79, 97, 98, 145], "notna": [83, 145], "uniqu": [84, 145], "queryfilt": 88, "221": [88, 123], "234": 88, "93": 88, "239": 88, "273": 88, "214": 88, "exponenti": [89, 99], "1367": 89, "520366": 89, "2913": 89, "840351": 89, "39991": 89, "998691": 89, "30617": 89, "998905": 89, "6557": 89, "760944": 89, "289159912": 90, "031627441": 90, "256136963": 90, "844534180": 90, "left": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102], "div": [92, 93, 102, 145], "027042": [92, 93, 102], "018525": [92, 93, 102], "005001": [92, 93, 102], "005715": [92, 93, 102], "012349": [92, 93, 102], "new_nam": 94, "symbol": 94, "instanc": 94, "could": 94, "floordiv": [95, 145], "500": [95, 96, 126], "mod": [96, 145], "260006": 96, "180004": 96, "040009": 96, "150": 96, "119980": 96, "369": [97, 98], "799995": [97, 98], "539": [97, 98], "1999": [97, 98], "799957": [97, 98], "1749": [97, 98], "809": [97, 98], "800034": [97, 98], "pow": [99, 145], "int_": 99, "subtract": [100, 101, 107, 145], "sub": [100, 101, 108, 145], "198": [100, 101], "173": [100, 101], "79": [100, 101], "197": [107, 108, 118], "172": [107, 108], "78": [107, 108, 118], "oml_seri": 111, "oml_": 111, "pd_": 111, "min_row": 113, "behavior": 115, "slightli": 115, "seen": 115, "bucket": 116, "automat": 116, "descend": 116, "overal": 116, "os_api_doc": 116, "3331": [116, 118], "3274": 116, "3234": 116, "3220": 116, "etl": [118, 135, 136, 139], "filepath_or_buff": 118, "os_if_exist": [118, 136], "os_refresh": [118, 136], "os_type_overrid": [118, 136], "delimit": 118, "usecol": 118, "prefix": 118, "engin": 118, "true_valu": 118, "false_valu": 118, "skipinitialspac": 118, "skiprow": 118, "skipfoot": 118, "nrow": 118, "na_valu": 118, "keep_default_na": 118, "na_filt": 118, "skip_blank_lin": 118, "parse_d": 118, "infer_datetime_format": 118, "keep_date_col": 118, "date_pars": 118, "dayfirst": 118, "cache_d": 118, "thousand": 118, "linetermin": 118, "comment": 118, "dialect": 118, "warn_bad_lin": 118, "error_bad_lin": 118, "on_bad_lin": 118, "delim_whitespac": 118, "low_memori": 118, "memory_map": 118, "float_precis": 118, "modifi": [118, 136], "append": [118, 136], "behav": [118, 136], "alreadi": [118, 136], "valueerror": [118, 136], "insert": [118, 136], "caus": [118, 136], "bulk": [118, 136], "es_typ": 118, "overrid": [118, 136], "read_csv": 118, "churn": 118, "osclient": 118, "area": 118, "phone": 118, "plan": 118, "voic": 118, "mail": 118, "vmail": 118, "dai": 118, "minut": 118, "charg": 118, "ev": 118, "night": 118, "intl": 118, "servic": 118, "k": 118, "128": 118, "415": 118, "382": 118, "4657": 118, "ye": 118, "265": 118, "244": [118, 130], "91": 118, "oh": 118, "371": 118, "7191": 118, "123": 118, "195": [118, 123], "103": 118, "137": 118, "104": 118, "162": 118, "84": 118, "408": 118, "89": 118, "86": 118, "196": 118, "186": 118, "3328": 118, "192": [118, 123], "279": [118, 130], "3329": 118, "191": 118, "3330": 118, "510": 118, "184": 118, "139": 118, "3332": 118, "74": 118, "77": 118, "241": 118, "3333": 118, "valid": 118, "took": 118, "timed_out": 118, "_shard": 118, "success": 118, "skip": 118, "hit": 118, "eq": 118, "max_scor": 118, "_index": 118, "_score": 118, "retain": 118, "hold": 119, "au": [120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "294312": [120, 121, 127], "1197": [120, 121, 124], "632690": [120, 121, 124], "ca": [120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "557251": [120, 121, 127], "1198": [120, 121, 124], "852539": [120, 121, 124], "101": [120, 121, 127], "004005": [120, 121, 127], "742310": [120, 121, 124], "877190": [120, 121, 127], "621582": [120, 121, 124], "142": [120, 121, 127], "876465": [120, 121, 127], "855": [120, 121, 124], "935547": [120, 121, 124], "305": [122, 128], "377": [122, 128], "416": [122, 128], "944": [122, 128], "739": [122, 128], "1987": [122, 128], "283": [122, 128], "233": 123, "697174": 123, "189": 123, "250061": 123, "823669": 123, "202": 123, "539764": 123, "203": 123, "344696": 123, "206": 123, "431702": 123, "178": 123, "658447": 123, "863434": 123, "228": 123, "461365": 123, "162842": 123, "605": 125, "132970": 125, "152174": 125, "695652": 125, "891304443": 125, "674": 125, "827252": 125, "147541": 125, "744262": 125, "593442627": 125, "650530": 125, "175066": 125, "872679": 125, "469496094": 125, "669": 125, "558832": 125, "129808": 125, "843750": 125, "199519287": 125, "648": 125, "747109": 125, "134534": 125, "951271": 125, "165254150": 125, "662": 125, "994963": 125, "131258": 125, "832206": 125, "534506104": 125, "660": 125, "612988": 125, "149020": 125, "682353": 125, "447058838": 125, "485": 125, "253247": 125, "100000": 125, "900000": 125, "000000000": 125, "595": 125, "774391": 125, "125315": 125, "753900": 125, "456970215": 125, "053057": 125, "148410": 125, "766784": 125, "141342773": 125, "585": 126, "720490": 126, "678": 126, "447433": 126, "659": 126, "715592": 126, "689": 126, "241348": 126, "663": 126, "516057": 126, "670": 126, "714956": 126, "680": 126, "111084": 126, "441": 126, "681122": 126, "600": 126, "591525": 126, "633": 126, "935425": 126, "572": 129, "290384": 129, "578": 129, "140564": 129, "567": 129, "980560": 129, "582": 129, "618713": 129, "590": 129, "170986": 129, "811890": 129, "574": 129, "131340": 129, "852264": 129, "591": 129, "533699": 129, "877014": 129, "791": 129, "622625": 129, "793": 129, "362946": 129, "378523": 129, "766": 129, "855530": 129, "319": 129, "925979": 129, "325": 129, "704562": 129, "327": 129, "311007": 129, "336": 129, "839572": 129, "332": 129, "323011": 129, "314": 129, "472537": 129, "652659": 129, "298": 129, "483032": 129, "290205": 129, "024850": 129, "362137": 129, "568": 129, "323944": 129, "489746": 129, "523": 129, "890680": 129, "875500": 130, "367171": 130, "020634": 130, "903626": 130, "355811": 130, "949901": 130, "883342": 130, "381035": 130, "026411": 130, "585377": 130, "336902": 130, "961486": 130, "261": 130, "263054": 130, "341587": 130, "921980": 130, "259": 130, "696213": 130, "338140": 130, "964815": 130, "232": 130, "504297": 130, "357510": 130, "991340": 130, "267": 130, "827572": 130, "333333": 130, "191454": 130, "272": 130, "774819": 130, "331242": 130, "939469": 130, "505568": 130, "356766": 130, "948258": 130, "783612e": 131, "124": 131, "058223e": 131, "837": 131, "437872e": 131, "66": 131, "1083": 131, "785365e": 131, "1183": 131, "124173e": 131, "127": 131, "2786": 131, "899533e": 131, "97": 131, "2093": 131, "684563e": 131, "684": 131, "852532e": 131, "183804e": 131, "249": 131, "5472": 131, "819840e": 131, "783": 131, "75789": 132, "979090": 132, "130443": 132, "950549": 132, "59683": 132, "055316": 132, "125979": 132, "783429": 132, "65726": 132, "669676": 132, "144610": 132, "090013": 132, "65088": 132, "483446": 132, "113094": 132, "833562": 132, "68149": 132, "950516": 132, "116496": 132, "688139": 132, "67305": 132, "277617": 132, "114107": 132, "852666": 132, "53740": 132, "570338": 132, "127062": 132, "942132": 132, "61245": 132, "521047": 132, "094868": 132, "100420": 132, "74349": 132, "939410": 132, "109638": 132, "758700": 132, "62920": 132, "072901": 132, "126608": 132, "775609": 132, "self": 134, "model_config_path": 134, "metadata": 134, "break": 134, "filepath": 134, "doesn": 134, "anyth": 134, "signific": 135, "signfic": 135, "stdout": 135, "10000": 135, "2020": 135, "572395": 135, "309031": 135, "pandas_to_opensearch": [135, 139], "os_verify_mapping_compat": 136, "thread_count": 136, "use_pandas_index_for_os_id": 136, "mainli": 136, "destin": 136, "refresh": 136, "field_nam": 136, "es_data_typ": 136, "verifi": 136, "schema": 136, "thread": 136, "destination_index": 136, "141": 136, "c": 136, "foo": 136, "20190102": 136, "h": 136, "if_exist": 136, "sync": 136, "readabl": 136, "empti": [138, 145], "ndim": [138, 145], "accur": 138, "approxim": 138, "hyperloglog": 138, "algorithm": 138, "exact": 138, "idxmax": 138, "idxmin": 138, "os_match": [138, 145], "os_queri": 138, "to_csv": 138, "to_html": 138, "to_str": [138, 145], "to_panda": [138, 145], "page": 140, "overview": 140, "public": 140, "expos": 140, "namespac": 140, "constructor": 140, "applic": 140, "groupbi": 140, "window": 140, "stat": 140, "reindex": 140, "manipul": 140, "serial": 140, "io": 140, "convers": 140, "flat": 140, "variant": 141, "thereof": 141, "those": 141, "most": 141, "multipli": 145, "divid": 145, "radd": 145, "rsub": 145, "rsubtract": 145, "rmul": 145, "rmultipli": 145, "rdiv": 145, "rdivid": 145, "rtruediv": 145, "rfloordiv": 145, "rmod": 145, "rpow": 145, "renam": 145, "isnul": 145, "notnul": 145}, "objects": {"": [[4, 0, 0, "-", "opensearch_py_ml"]], "opensearch_py_ml": [[5, 1, 1, "", "DataFrame"], [54, 1, 1, "", "Index"], [55, 1, 1, "", "Series"]], "opensearch_py_ml.DataFrame": [[6, 2, 1, "", "agg"], [7, 2, 1, "", "aggregate"], [8, 3, 1, "", "columns"], [9, 2, 1, "", "count"], [10, 2, 1, "", "describe"], [11, 2, 1, "", "drop"], [12, 3, 1, "", "dtypes"], [13, 3, 1, "", "empty"], [14, 2, 1, "", "filter"], [15, 2, 1, "", "get"], [16, 2, 1, "", "groupby"], [17, 2, 1, "", "head"], [18, 2, 1, "", "hist"], [19, 2, 1, "", "idxmax"], [20, 2, 1, "", "idxmin"], [21, 3, 1, "", "index"], [22, 2, 1, "", "info"], [23, 2, 1, "", "iterrows"], [24, 2, 1, "", "itertuples"], [25, 2, 1, "", "keys"], [26, 2, 1, "", "mad"], [27, 2, 1, "", "max"], [28, 2, 1, "", "mean"], [29, 2, 1, "", "median"], [30, 2, 1, "", "min"], [31, 2, 1, "", "mode"], [32, 3, 1, "", "ndim"], [33, 2, 1, "", "nunique"], [34, 3, 1, "", "os_dtypes"], [35, 2, 1, "", "os_info"], [36, 2, 1, "", "os_match"], [37, 2, 1, "", "os_query"], [38, 2, 1, "", "quantile"], [39, 2, 1, "", "query"], [40, 2, 1, "", "sample"], [41, 2, 1, "", "select_dtypes"], [42, 3, 1, "", "shape"], [43, 3, 1, "", "size"], [44, 2, 1, "", "std"], [45, 2, 1, "", "sum"], [46, 2, 1, "", "tail"], [47, 2, 1, "", "to_csv"], [48, 2, 1, "", "to_html"], [49, 2, 1, "", "to_numpy"], [50, 2, 1, "", "to_pandas"], [51, 2, 1, "", "to_string"], [52, 3, 1, "", "values"], [53, 2, 1, "", "var"]], "opensearch_py_ml.Series": [[56, 2, 1, "", "add"], [57, 2, 1, "", "describe"], [58, 2, 1, "", "div"], [59, 2, 1, "", "divide"], [60, 3, 1, "", "dtype"], [61, 3, 1, "", "dtypes"], [62, 3, 1, "", "empty"], [63, 2, 1, "", "filter"], [64, 2, 1, "", "floordiv"], [65, 2, 1, "", "head"], [66, 2, 1, "", "hist"], [67, 3, 1, "", "index"], [68, 2, 1, "", "isin"], [69, 2, 1, "", "isna"], [70, 2, 1, "", "isnull"], [71, 2, 1, "", "mad"], [72, 2, 1, "", "max"], [73, 2, 1, "", "mean"], [74, 2, 1, "", "median"], [75, 2, 1, "", "min"], [76, 2, 1, "", "mod"], [77, 2, 1, "", "mode"], [78, 2, 1, "", "mul"], [79, 2, 1, "", "multiply"], [80, 3, 1, "", "name"], [81, 3, 1, "", "ndim"], [82, 2, 1, "", "notna"], [83, 2, 1, "", "notnull"], [84, 2, 1, "", "nunique"], [85, 3, 1, "", "os_dtype"], [86, 3, 1, "", "os_dtypes"], [87, 2, 1, "", "os_info"], [88, 2, 1, "", "os_match"], [89, 2, 1, "", "pow"], [90, 2, 1, "", "quantile"], [91, 2, 1, "", "radd"], [92, 2, 1, "", "rdiv"], [93, 2, 1, "", "rdivide"], [94, 2, 1, "", "rename"], [95, 2, 1, "", "rfloordiv"], [96, 2, 1, "", "rmod"], [97, 2, 1, "", "rmul"], [98, 2, 1, "", "rmultiply"], [99, 2, 1, "", "rpow"], [100, 2, 1, "", "rsub"], [101, 2, 1, "", "rsubtract"], [102, 2, 1, "", "rtruediv"], [103, 2, 1, "", "sample"], [104, 3, 1, "", "shape"], [105, 3, 1, "", "size"], [106, 2, 1, "", "std"], [107, 2, 1, "", "sub"], [108, 2, 1, "", "subtract"], [109, 2, 1, "", "sum"], [110, 2, 1, "", "tail"], [111, 2, 1, "", "to_numpy"], [112, 2, 1, "", "to_pandas"], [113, 2, 1, "", "to_string"], [114, 2, 1, "", "truediv"], [115, 2, 1, "", "unique"], [116, 2, 1, "", "value_counts"], [117, 2, 1, "", "var"]], "opensearch_py_ml.etl": [[118, 4, 1, "", "csv_to_opensearch"], [135, 2, 1, "", "opensearch_to_pandas"], [136, 2, 1, "", "pandas_to_opensearch"]], "opensearch_py_ml.groupby": [[119, 1, 1, "", "DataFrameGroupBy"]], "opensearch_py_ml.groupby.DataFrameGroupBy": [[120, 2, 1, "", "agg"], [121, 2, 1, "", "aggregate"], [122, 2, 1, "", "count"], [123, 2, 1, "", "mad"], [124, 2, 1, "", "max"], [125, 2, 1, "", "mean"], [126, 2, 1, "", "median"], [127, 2, 1, "", "min"], [128, 2, 1, "", "nunique"], [129, 2, 1, "", "quantile"], [130, 2, 1, "", "std"], [131, 2, 1, "", "sum"], [132, 2, 1, "", "var"]], "opensearch_py_ml.ml_commons_integration.MLCommonClient": [[134, 4, 1, "", "upload_model"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"demo": [0, 1], "notebook": [0, 1], "datafram": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 138], "step": [0, 1, 3], "0": [0, 1, 3], "import": [0, 1, 3], "1": [0, 1, 3], "setup": [0, 3], "client": [0, 1, 3], "compar": 0, "similar": 0, "differ": 0, "between": 0, "panda": [0, 139], "v": 0, "opensearch_py_ml": [0, 54], "attribut": [0, 138, 145], "underli": [0, 138, 145], "data": [0, 3, 138, 145], "column": [0, 3, 8], "dtype": [0, 12, 60, 61], "select_dtyp": [0, 41], "empti": [0, 13, 62], "shape": [0, 42, 104], "index": [0, 3, 21, 54, 67, 138, 141, 145], "valu": [0, 52], "iter": [0, 138, 145], "head": [0, 3, 17, 65], "tail": [0, 3, 46, 110], "kei": [0, 25], "get": [0, 3, 4, 15], "queri": [0, 1, 39], "boolean": [0, 3], "function": [0, 138, 139, 145], "applic": [0, 138], "groupbi": [0, 16, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138], "window": [0, 138], "agg": [0, 6, 120], "comput": [0, 138, 145], "descript": [0, 3, 138, 145], "stat": [0, 138, 145], "count": [0, 9, 122], "describ": [0, 10, 57], "info": [0, 22], "max": [0, 27, 72, 124], "min": [0, 30, 75, 127], "mean": [0, 28, 73, 125], "sum": [0, 45, 109, 131], "nuniqu": [0, 33, 84, 128], "drop": [0, 11], "plot": [0, 138, 145], "opensearch": [0, 1, 4, 138, 139, 145], "util": [0, 139], "sentenc": [1, 144], "transform": [1, 144], "model": [1, 143, 144], "train": [1, 137, 144], "save": 1, "upload": [1, 143], "packag": 1, "set": 1, "up": 1, "read": 1, "synthet": 1, "fine": 1, "tune": 1, "us": 1, "hug": 1, "face": 1, "2": 1, "option": 1, "3": 1, "cluster": 1, "exampl": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 49, 53, 55, 56, 57, 58, 59, 61, 64, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 111, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136], "onlin": 3, "retail": 3, "analysi": 3, "start": [3, 4], "select": [3, 138, 145], "aggreg": [3, 7, 121], "statist": 3, "arithmet": 3, "oper": [3, 145], "py": 4, "ml": 4, "machin": 4, "learn": 4, "back": 4, "warn": 4, "paramet": [5, 6, 7, 11, 14, 15, 16, 17, 19, 20, 23, 24, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 44, 45, 46, 53, 55, 56, 58, 59, 63, 64, 76, 77, 78, 79, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 114, 116, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136], "see": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 57, 60, 61, 63, 67, 69, 70, 71, 72, 73, 74, 75, 77, 81, 82, 83, 84, 90, 94, 105, 106, 109, 111, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136], "also": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 57, 60, 61, 63, 67, 69, 70, 71, 72, 73, 74, 75, 77, 81, 82, 83, 84, 90, 94, 105, 106, 109, 111, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136], "return": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 53, 56, 57, 58, 59, 61, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136], "filter": [14, 63], "note": [14, 18, 22, 42, 55, 63, 66, 104, 118], "hist": [18, 66], "idxmax": 19, "idxmin": 20, "iterrow": 23, "yield": 23, "itertupl": 24, "mad": [26, 71, 123], "median": [29, 74, 126], "mode": [31, 77], "ndim": [32, 81], "os_dtyp": [34, 85, 86], "os_info": [35, 87], "os_match": [36, 88], "os_queri": 37, "quantil": [38, 90, 129], "sampl": [40, 103], "size": [43, 105], "std": [44, 106, 130], "to_csv": 47, "to_html": 48, "to_numpi": [49, 111], "to_panda": [50, 112], "to_str": [51, 113], "var": [53, 117, 132], "seri": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 145], "add": 56, "div": 58, "divid": 59, "floordiv": 64, "isin": 68, "isna": 69, "isnul": 70, "mod": 76, "mul": 78, "multipli": 79, "name": 80, "notna": 82, "notnul": 83, "pow": 89, "radd": 91, "rdiv": 92, "rdivid": 93, "renam": 94, "rfloordiv": 95, "rmod": 96, "rmul": 97, "rmultipli": 98, "rpow": 99, "rsub": 100, "rsubtract": 101, "rtruediv": 102, "sub": 107, "subtract": 108, "truediv": 114, "uniqu": 115, "value_count": 116, "csv_to_opensearch": 118, "other": 118, "dataframegroupbi": [119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "upload_model": 134, "opensearch_to_panda": 135, "pandas_to_opensearch": 136, "constructor": [138, 141, 145], "reindex": [138, 145], "label": [138, 145], "manipul": [138, 145], "serial": [138, 145], "io": [138, 145], "convers": [138, 145], "gener": 139, "api": 140, "refer": 140, "input": 142, "output": 142, "flat": 142, "file": 142, "mlcommon": 143, "support": 143, "binari": 145}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Demo Notebook for Dataframe": [[0, "Demo-Notebook-for-Dataframe"]], "Step 0: Imports": [[0, "Step-0:-Imports"], [3, "Step-0:-Imports"]], "Step 1: Setup clients": [[0, "Step-1:-Setup-clients"], [3, "Step-1:-Setup-clients"]], "Comparing similarities and differences between panda dataframe vs opensearch_py_ml dataframe": [[0, "Comparing-similarities-and-differences-between-panda-dataframe-vs-opensearch_py_ml-dataframe"]], "Attributes and underlying data": [[0, "Attributes-and-underlying-data"]], "DataFrame.columns": [[0, "DataFrame.columns"], [8, "dataframe-columns"]], "DataFrame.dtypes": [[0, "DataFrame.dtypes"], [12, "dataframe-dtypes"]], "DataFrame.select_dtypes": [[0, "DataFrame.select_dtypes"], [41, "dataframe-select-dtypes"]], "DataFrame.empty": [[0, "DataFrame.empty"], [13, "dataframe-empty"]], "DataFrame.shape": [[0, "DataFrame.shape"], [42, "dataframe-shape"]], "DataFrame.index": [[0, "DataFrame.index"], [21, "dataframe-index"]], "DataFrame.values": [[0, "DataFrame.values"], [52, "dataframe-values"]], "Indexing, iteration": [[0, "Indexing,-iteration"]], "DataFrame.head": [[0, "DataFrame.head"], [17, "dataframe-head"]], "DataFrame.tail": [[0, "DataFrame.tail"], [46, "dataframe-tail"]], "DataFrame.keys": [[0, "DataFrame.keys"], [25, "dataframe-keys"]], "DataFrame.get": [[0, "DataFrame.get"], [15, "dataframe-get"]], "DataFrame.query": [[0, "DataFrame.query"], [39, "dataframe-query"]], "Boolean indexing query": [[0, "Boolean-indexing-query"]], "Function application, GroupBy & window": [[0, "Function-application,-GroupBy-&-window"]], "DataFrame.aggs": [[0, "DataFrame.aggs"]], "Computations / descriptive stats": [[0, "Computations-/-descriptive-stats"]], "DataFrame.count": [[0, "DataFrame.count"], [9, "dataframe-count"]], "DataFrame.describe": [[0, "DataFrame.describe"], [10, "dataframe-describe"]], "DataFrame.info": [[0, "DataFrame.info"], [22, "dataframe-info"]], "DataFrame.max, DataFrame.min, DataFrame.mean, DataFrame.sum": [[0, "DataFrame.max,-DataFrame.min,-DataFrame.mean,-DataFrame.sum"]], "max": [[0, "max"]], "min": [[0, "min"]], "mean": [[0, "mean"]], "sum": [[0, "sum"]], "DataFrame.nunique": [[0, "DataFrame.nunique"], [33, "dataframe-nunique"]], "DataFrame.drop": [[0, "DataFrame.drop"], [11, "dataframe-drop"]], "Plotting": [[0, "Plotting"], [138, "plotting"], [145, "plotting"]], "Opensearch utilities": [[0, "Opensearch-utilities"]], "Demo Notebook for Sentence Transformer Model Training, Saving and Uploading to OpenSearch": [[1, "Demo-Notebook-for-Sentence-Transformer-Model-Training,-Saving-and-Uploading-to-OpenSearch"]], "Step 0: Import packages and set up client": [[1, "Step-0:-Import-packages-and-set-up-client"]], "Step 1: Read synthetic queries and train/fine-tune model using a hugging face sentence transformer model": [[1, "Step-1:-Read-synthetic-queries-and-train/fine-tune-model-using-a-hugging-face-sentence-transformer-model"]], "Step 2: (Optional) Save model": [[1, "Step-2:-(Optional)-Save-model"]], "Step 3: Upload the model to OpenSearch cluster": [[1, "Step-3:-Upload-the-model-to-OpenSearch-cluster"]], "Examples": [[2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [9, "examples"], [10, "examples"], [11, "examples"], [12, "examples"], [13, "examples"], [15, "examples"], [16, "examples"], [17, "examples"], [18, "examples"], [19, "examples"], [20, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [26, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [41, "examples"], [42, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [49, "examples"], [53, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [61, "examples"], [64, "examples"], [66, "examples"], [67, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [84, "examples"], [86, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [104, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [111, "examples"], [114, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [135, "examples"], [136, "examples"]], "Online Retail analysis": [[3, "Online-Retail-analysis"]], "Getting Started": [[3, "Getting-Started"], [4, "getting-started"]], "Selecting and Indexing Data": [[3, "Selecting-and-Indexing-Data"]], "head and tail": [[3, "head-and-tail"]], "Selecting columns": [[3, "Selecting-columns"]], "Boolean Indexing": [[3, "Boolean-Indexing"]], "Aggregation and Descriptive Statistics": [[3, "Aggregation-and-Descriptive-Statistics"]], "Arithmetic Operations": [[3, "Arithmetic-Operations"]], "Opensearch-py-ml: DataFrames and Machine Learning backed by Opensearch": [[4, "opensearch-py-ml-dataframes-and-machine-learning-backed-by-opensearch"]], "WARNING": [[4, "warning"]], "DataFrame": [[5, "dataframe"], [138, "dataframe"]], "Parameters": [[5, "parameters"], [6, "parameters"], [7, "parameters"], [11, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [19, "parameters"], [20, "parameters"], [23, "parameters"], [24, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [53, "parameters"], [55, "parameters"], [56, "parameters"], [58, "parameters"], [59, "parameters"], [63, "parameters"], [64, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [107, "parameters"], [108, "parameters"], [114, "parameters"], [116, "parameters"], [118, "parameters"], [120, "parameters"], [121, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"]], "See Also": [[5, "see-also"], [6, "see-also"], [7, "see-also"], [8, "see-also"], [9, "see-also"], [10, "see-also"], [11, "see-also"], [12, "see-also"], [13, "see-also"], [14, "see-also"], [15, "see-also"], [16, "see-also"], [17, "see-also"], [19, "see-also"], [20, "see-also"], [21, "see-also"], [23, "see-also"], [24, "see-also"], [26, "see-also"], [27, "see-also"], [28, "see-also"], [29, "see-also"], [30, "see-also"], [31, "see-also"], [32, "see-also"], [33, "see-also"], [38, "see-also"], [39, "see-also"], [40, "see-also"], [43, "see-also"], [44, "see-also"], [45, "see-also"], [46, "see-also"], [47, "see-also"], [48, "see-also"], [49, "see-also"], [51, "see-also"], [52, "see-also"], [53, "see-also"], [55, "see-also"], [57, "see-also"], [60, "see-also"], [61, "see-also"], [63, "see-also"], [67, "see-also"], [69, "see-also"], [70, "see-also"], [71, "see-also"], [72, "see-also"], [73, "see-also"], [74, "see-also"], [75, "see-also"], [77, "see-also"], [81, "see-also"], [82, "see-also"], [83, "see-also"], [84, "see-also"], [90, "see-also"], [94, "see-also"], [105, "see-also"], [106, "see-also"], [109, "see-also"], [111, "see-also"], [113, "see-also"], [115, "see-also"], [116, "see-also"], [117, "see-also"], [118, "see-also"], [120, "see-also"], [121, "see-also"], [122, "see-also"], [123, "see-also"], [124, "see-also"], [125, "see-also"], [126, "see-also"], [127, "see-also"], [128, "see-also"], [129, "see-also"], [130, "see-also"], [131, "see-also"], [132, "see-also"], [135, "see-also"], [136, "see-also"]], "DataFrame.agg": [[6, "dataframe-agg"]], "Returns": [[6, "returns"], [7, "returns"], [8, "returns"], [9, "returns"], [10, "returns"], [11, "returns"], [12, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [19, "returns"], [20, "returns"], [21, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [50, "returns"], [53, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [61, "returns"], [63, "returns"], [64, "returns"], [67, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [78, "returns"], [79, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [86, "returns"], [88, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [92, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [123, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [134, "returns"], [135, "returns"], [136, "returns"]], "DataFrame.aggregate": [[7, "dataframe-aggregate"]], "DataFrame.filter": [[14, "dataframe-filter"]], "Notes": [[14, "notes"], [18, "notes"], [22, "notes"], [42, "notes"], [55, "notes"], [63, "notes"], [66, "notes"], [104, "notes"], [118, "notes"]], "DataFrame.groupby": [[16, "dataframe-groupby"]], "DataFrame.hist": [[18, "dataframe-hist"]], "DataFrame.idxmax": [[19, "dataframe-idxmax"]], "DataFrame.idxmin": [[20, "dataframe-idxmin"]], "DataFrame.iterrows": [[23, "dataframe-iterrows"]], "Yields": [[23, "yields"]], "DataFrame.itertuples": [[24, "dataframe-itertuples"]], "DataFrame.mad": [[26, "dataframe-mad"]], "DataFrame.max": [[27, "dataframe-max"]], "DataFrame.mean": [[28, "dataframe-mean"]], "DataFrame.median": [[29, "dataframe-median"]], "DataFrame.min": [[30, "dataframe-min"]], "DataFrame.mode": [[31, "dataframe-mode"]], "DataFrame.ndim": [[32, "dataframe-ndim"]], "DataFrame.os_dtypes": [[34, "dataframe-os-dtypes"]], "DataFrame.os_info": [[35, "dataframe-os-info"]], "DataFrame.os_match": [[36, "dataframe-os-match"]], "DataFrame.os_query": [[37, "dataframe-os-query"]], "DataFrame.quantile": [[38, "dataframe-quantile"]], "DataFrame.sample": [[40, "dataframe-sample"]], "DataFrame.size": [[43, "dataframe-size"]], "DataFrame.std": [[44, "dataframe-std"]], "DataFrame.sum": [[45, "dataframe-sum"]], "DataFrame.to_csv": [[47, "dataframe-to-csv"]], "DataFrame.to_html": [[48, "dataframe-to-html"]], "DataFrame.to_numpy": [[49, "dataframe-to-numpy"]], "DataFrame.to_pandas": [[50, "dataframe-to-pandas"]], "DataFrame.to_string": [[51, "dataframe-to-string"]], "DataFrame.var": [[53, "dataframe-var"]], "opensearch_py_ml.Index": [[54, "opensearch-py-ml-index"]], "Series": [[55, "series"], [145, "series"]], "Series.add": [[56, "series-add"]], "Series.describe": [[57, "series-describe"]], "Series.div": [[58, "series-div"]], "Series.divide": [[59, "series-divide"]], "Series.dtype": [[60, "series-dtype"]], "Series.dtypes": [[61, "series-dtypes"]], "Series.empty": [[62, "series-empty"]], "Series.filter": [[63, "series-filter"]], "Series.floordiv": [[64, "series-floordiv"]], "Series.head": [[65, "series-head"]], "Series.hist": [[66, "series-hist"]], "Series.index": [[67, "series-index"]], "Series.isin": [[68, "series-isin"]], "Series.isna": [[69, "series-isna"]], "Series.isnull": [[70, "series-isnull"]], "Series.mad": [[71, "series-mad"]], "Series.max": [[72, "series-max"]], "Series.mean": [[73, "series-mean"]], "Series.median": [[74, "series-median"]], "Series.min": [[75, "series-min"]], "Series.mod": [[76, "series-mod"]], "Series.mode": [[77, "series-mode"]], "Series.mul": [[78, "series-mul"]], "Series.multiply": [[79, "series-multiply"]], "Series.name": [[80, "series-name"]], "Series.ndim": [[81, "series-ndim"]], "Series.notna": [[82, "series-notna"]], "Series.notnull": [[83, "series-notnull"]], "Series.nunique": [[84, "series-nunique"]], "Series.os_dtype": [[85, "series-os-dtype"]], "Series.os_dtypes": [[86, "series-os-dtypes"]], "Series.os_info": [[87, "series-os-info"]], "Series.os_match": [[88, "series-os-match"]], "Series.pow": [[89, "series-pow"]], "Series.quantile": [[90, "series-quantile"]], "Series.radd": [[91, "series-radd"]], "Series.rdiv": [[92, "series-rdiv"]], "Series.rdivide": [[93, "series-rdivide"]], "Series.rename": [[94, "series-rename"]], "Series.rfloordiv": [[95, "series-rfloordiv"]], "Series.rmod": [[96, "series-rmod"]], "Series.rmul": [[97, "series-rmul"]], "Series.rmultiply": [[98, "series-rmultiply"]], "Series.rpow": [[99, "series-rpow"]], "Series.rsub": [[100, "series-rsub"]], "Series.rsubtract": [[101, "series-rsubtract"]], "Series.rtruediv": [[102, "series-rtruediv"]], "Series.sample": [[103, "series-sample"]], "Series.shape": [[104, "series-shape"]], "Series.size": [[105, "series-size"]], "Series.std": [[106, "series-std"]], "Series.sub": [[107, "series-sub"]], "Series.subtract": [[108, "series-subtract"]], "Series.sum": [[109, "series-sum"]], "Series.tail": [[110, "series-tail"]], "Series.to_numpy": [[111, "series-to-numpy"]], "Series.to_pandas": [[112, "series-to-pandas"]], "Series.to_string": [[113, "series-to-string"]], "Series.truediv": [[114, "series-truediv"]], "Series.unique": [[115, "series-unique"]], "Series.value_counts": [[116, "series-value-counts"]], "Series.var": [[117, "series-var"]], "csv_to_opensearch": [[118, "csv-to-opensearch"]], "Other Parameters": [[118, "other-parameters"]], "groupby.DataFrameGroupBy": [[119, "groupby-dataframegroupby"]], "groupby.DataFrameGroupBy.agg": [[120, "groupby-dataframegroupby-agg"]], "groupby.DataFrameGroupBy.aggregate": [[121, "groupby-dataframegroupby-aggregate"]], "groupby.DataFrameGroupBy.count": [[122, "groupby-dataframegroupby-count"]], "groupby.DataFrameGroupBy.mad": [[123, "groupby-dataframegroupby-mad"]], "groupby.DataFrameGroupBy.max": [[124, "groupby-dataframegroupby-max"]], "groupby.DataFrameGroupBy.mean": [[125, "groupby-dataframegroupby-mean"]], "groupby.DataFrameGroupBy.median": [[126, "groupby-dataframegroupby-median"]], "groupby.DataFrameGroupBy.min": [[127, "groupby-dataframegroupby-min"]], "groupby.DataFrameGroupBy.nunique": [[128, "groupby-dataframegroupby-nunique"]], "groupby.DataFrameGroupBy.quantile": [[129, "groupby-dataframegroupby-quantile"]], "groupby.DataFrameGroupBy.std": [[130, "groupby-dataframegroupby-std"]], "groupby.DataFrameGroupBy.sum": [[131, "groupby-dataframegroupby-sum"]], "groupby.DataFrameGroupBy.var": [[132, "groupby-dataframegroupby-var"]], "groupby.GroupBy": [[133, "groupby-groupby"]], "upload_model": [[134, "upload-model"]], "opensearch_to_pandas": [[135, "opensearch-to-pandas"]], "pandas_to_opensearch": [[136, "pandas-to-opensearch"]], "Train": [[137, "train"]], "Constructor": [[138, "constructor"], [141, "constructor"], [145, "constructor"]], "Attributes and Underlying Data": [[138, "attributes-and-underlying-data"], [145, "attributes-and-underlying-data"]], "Indexing, Iteration": [[138, "indexing-iteration"], [145, "indexing-iteration"]], "Function Application, GroupBy & Window": [[138, "function-application-groupby-window"]], "Computations / Descriptive Stats": [[138, "computations-descriptive-stats"], [145, "computations-descriptive-stats"]], "Reindexing / Selection / Label Manipulation": [[138, "reindexing-selection-label-manipulation"], [145, "reindexing-selection-label-manipulation"]], "Opensearch Functions": [[138, "opensearch-functions"], [145, "opensearch-functions"]], "Serialization / IO / Conversion": [[138, "serialization-io-conversion"], [145, "serialization-io-conversion"]], "General Utility Functions": [[139, "general-utility-functions"]], "Pandas and Opensearch": [[139, "pandas-and-opensearch"]], "API Reference": [[140, "api-reference"]], "Index": [[141, "index"]], "Input/Output": [[142, "input-output"]], "Flat File": [[142, "flat-file"]], "MLCommons Support": [[143, "mlcommons-support"]], "Upload Model": [[143, "upload-model"]], "Sentence Transformer": [[144, "sentence-transformer"]], "Train Model": [[144, "train-model"]], "Binary Operator Functions": [[145, "binary-operator-functions"]]}, "indexentries": {"module": [[4, "module-opensearch_py_ml"]], "opensearch_py_ml": [[4, "module-opensearch_py_ml"]], "dataframe (class in opensearch_py_ml)": [[5, "opensearch_py_ml.DataFrame"]], "agg() (opensearch_py_ml.dataframe method)": [[6, "opensearch_py_ml.DataFrame.agg"]], "aggregate() (opensearch_py_ml.dataframe method)": [[7, "opensearch_py_ml.DataFrame.aggregate"]], "columns (opensearch_py_ml.dataframe attribute)": [[8, "opensearch_py_ml.DataFrame.columns"]], "count() (opensearch_py_ml.dataframe method)": [[9, "opensearch_py_ml.DataFrame.count"]], "describe() (opensearch_py_ml.dataframe method)": [[10, "opensearch_py_ml.DataFrame.describe"]], "drop() (opensearch_py_ml.dataframe method)": [[11, "opensearch_py_ml.DataFrame.drop"]], "dtypes (opensearch_py_ml.dataframe attribute)": [[12, "opensearch_py_ml.DataFrame.dtypes"]], "empty (opensearch_py_ml.dataframe attribute)": [[13, "opensearch_py_ml.DataFrame.empty"]], "filter() (opensearch_py_ml.dataframe method)": [[14, "opensearch_py_ml.DataFrame.filter"]], "get() (opensearch_py_ml.dataframe method)": [[15, "opensearch_py_ml.DataFrame.get"]], "groupby() (opensearch_py_ml.dataframe method)": [[16, "opensearch_py_ml.DataFrame.groupby"]], "head() (opensearch_py_ml.dataframe method)": [[17, "opensearch_py_ml.DataFrame.head"]], "hist() (opensearch_py_ml.dataframe method)": [[18, "opensearch_py_ml.DataFrame.hist"]], "idxmax() (opensearch_py_ml.dataframe method)": [[19, "opensearch_py_ml.DataFrame.idxmax"]], "idxmin() (opensearch_py_ml.dataframe method)": [[20, "opensearch_py_ml.DataFrame.idxmin"]], "index (opensearch_py_ml.dataframe attribute)": [[21, "opensearch_py_ml.DataFrame.index"]], "info() (opensearch_py_ml.dataframe method)": [[22, "opensearch_py_ml.DataFrame.info"]], "iterrows() (opensearch_py_ml.dataframe method)": [[23, "opensearch_py_ml.DataFrame.iterrows"]], "itertuples() (opensearch_py_ml.dataframe method)": [[24, "opensearch_py_ml.DataFrame.itertuples"]], "keys() (opensearch_py_ml.dataframe method)": [[25, "opensearch_py_ml.DataFrame.keys"]], "mad() (opensearch_py_ml.dataframe method)": [[26, "opensearch_py_ml.DataFrame.mad"]], "max() (opensearch_py_ml.dataframe method)": [[27, "opensearch_py_ml.DataFrame.max"]], "mean() (opensearch_py_ml.dataframe method)": [[28, "opensearch_py_ml.DataFrame.mean"]], "median() (opensearch_py_ml.dataframe method)": [[29, "opensearch_py_ml.DataFrame.median"]], "min() (opensearch_py_ml.dataframe method)": [[30, "opensearch_py_ml.DataFrame.min"]], "mode() (opensearch_py_ml.dataframe method)": [[31, "opensearch_py_ml.DataFrame.mode"]], "ndim (opensearch_py_ml.dataframe attribute)": [[32, "opensearch_py_ml.DataFrame.ndim"]], "nunique() (opensearch_py_ml.dataframe method)": [[33, "opensearch_py_ml.DataFrame.nunique"]], "os_dtypes (opensearch_py_ml.dataframe attribute)": [[34, "opensearch_py_ml.DataFrame.os_dtypes"]], "os_info() (opensearch_py_ml.dataframe method)": [[35, "opensearch_py_ml.DataFrame.os_info"]], "os_match() (opensearch_py_ml.dataframe method)": [[36, "opensearch_py_ml.DataFrame.os_match"]], "os_query() (opensearch_py_ml.dataframe method)": [[37, "opensearch_py_ml.DataFrame.os_query"]], "quantile() (opensearch_py_ml.dataframe method)": [[38, "opensearch_py_ml.DataFrame.quantile"]], "query() (opensearch_py_ml.dataframe method)": [[39, "opensearch_py_ml.DataFrame.query"]], "sample() (opensearch_py_ml.dataframe method)": [[40, "opensearch_py_ml.DataFrame.sample"]], "select_dtypes() (opensearch_py_ml.dataframe method)": [[41, "opensearch_py_ml.DataFrame.select_dtypes"]], "shape (opensearch_py_ml.dataframe attribute)": [[42, "opensearch_py_ml.DataFrame.shape"]], "size (opensearch_py_ml.dataframe attribute)": [[43, "opensearch_py_ml.DataFrame.size"]], "std() (opensearch_py_ml.dataframe method)": [[44, "opensearch_py_ml.DataFrame.std"]], "sum() (opensearch_py_ml.dataframe method)": [[45, "opensearch_py_ml.DataFrame.sum"]], "tail() (opensearch_py_ml.dataframe method)": [[46, "opensearch_py_ml.DataFrame.tail"]], "to_csv() (opensearch_py_ml.dataframe method)": [[47, "opensearch_py_ml.DataFrame.to_csv"]], "to_html() (opensearch_py_ml.dataframe method)": [[48, "opensearch_py_ml.DataFrame.to_html"]], "to_numpy() (opensearch_py_ml.dataframe method)": [[49, "opensearch_py_ml.DataFrame.to_numpy"]], "to_pandas() (opensearch_py_ml.dataframe method)": [[50, "opensearch_py_ml.DataFrame.to_pandas"]], "to_string() (opensearch_py_ml.dataframe method)": [[51, "opensearch_py_ml.DataFrame.to_string"]], "values (opensearch_py_ml.dataframe attribute)": [[52, "opensearch_py_ml.DataFrame.values"]], "var() (opensearch_py_ml.dataframe method)": [[53, "opensearch_py_ml.DataFrame.var"]], "index (class in opensearch_py_ml)": [[54, "opensearch_py_ml.Index"]], "series (class in opensearch_py_ml)": [[55, "opensearch_py_ml.Series"]], "add() (opensearch_py_ml.series method)": [[56, "opensearch_py_ml.Series.add"]], "describe() (opensearch_py_ml.series method)": [[57, "opensearch_py_ml.Series.describe"]], "div() (opensearch_py_ml.series method)": [[58, "opensearch_py_ml.Series.div"]], "divide() (opensearch_py_ml.series method)": [[59, "opensearch_py_ml.Series.divide"]], "dtype (opensearch_py_ml.series attribute)": [[60, "opensearch_py_ml.Series.dtype"]], "dtypes (opensearch_py_ml.series attribute)": [[61, "opensearch_py_ml.Series.dtypes"]], "empty (opensearch_py_ml.series attribute)": [[62, "opensearch_py_ml.Series.empty"]], "filter() (opensearch_py_ml.series method)": [[63, "opensearch_py_ml.Series.filter"]], "floordiv() (opensearch_py_ml.series method)": [[64, "opensearch_py_ml.Series.floordiv"]], "head() (opensearch_py_ml.series method)": [[65, "opensearch_py_ml.Series.head"]], "hist() (opensearch_py_ml.series method)": [[66, "opensearch_py_ml.Series.hist"]], "index (opensearch_py_ml.series attribute)": [[67, "opensearch_py_ml.Series.index"]], "isin() (opensearch_py_ml.series method)": [[68, "opensearch_py_ml.Series.isin"]], "isna() (opensearch_py_ml.series method)": [[69, "opensearch_py_ml.Series.isna"]], "isnull() (opensearch_py_ml.series method)": [[70, "opensearch_py_ml.Series.isnull"]], "mad() (opensearch_py_ml.series method)": [[71, "opensearch_py_ml.Series.mad"]], "max() (opensearch_py_ml.series method)": [[72, "opensearch_py_ml.Series.max"]], "mean() (opensearch_py_ml.series method)": [[73, "opensearch_py_ml.Series.mean"]], "median() (opensearch_py_ml.series method)": [[74, "opensearch_py_ml.Series.median"]], "min() (opensearch_py_ml.series method)": [[75, "opensearch_py_ml.Series.min"]], "mod() (opensearch_py_ml.series method)": [[76, "opensearch_py_ml.Series.mod"]], "mode() (opensearch_py_ml.series method)": [[77, "opensearch_py_ml.Series.mode"]], "mul() (opensearch_py_ml.series method)": [[78, "opensearch_py_ml.Series.mul"]], "multiply() (opensearch_py_ml.series method)": [[79, "opensearch_py_ml.Series.multiply"]], "name (opensearch_py_ml.series attribute)": [[80, "opensearch_py_ml.Series.name"]], "ndim (opensearch_py_ml.series attribute)": [[81, "opensearch_py_ml.Series.ndim"]], "notna() (opensearch_py_ml.series method)": [[82, "opensearch_py_ml.Series.notna"]], "notnull() (opensearch_py_ml.series method)": [[83, "opensearch_py_ml.Series.notnull"]], "nunique() (opensearch_py_ml.series method)": [[84, "opensearch_py_ml.Series.nunique"]], "os_dtype (opensearch_py_ml.series attribute)": [[85, "opensearch_py_ml.Series.os_dtype"]], "os_dtypes (opensearch_py_ml.series attribute)": [[86, "opensearch_py_ml.Series.os_dtypes"]], "os_info() (opensearch_py_ml.series method)": [[87, "opensearch_py_ml.Series.os_info"]], "os_match() (opensearch_py_ml.series method)": [[88, "opensearch_py_ml.Series.os_match"]], "pow() (opensearch_py_ml.series method)": [[89, "opensearch_py_ml.Series.pow"]], "quantile() (opensearch_py_ml.series method)": [[90, "opensearch_py_ml.Series.quantile"]], "radd() (opensearch_py_ml.series method)": [[91, "opensearch_py_ml.Series.radd"]], "rdiv() (opensearch_py_ml.series method)": [[92, "opensearch_py_ml.Series.rdiv"]], "rdivide() (opensearch_py_ml.series method)": [[93, "opensearch_py_ml.Series.rdivide"]], "rename() (opensearch_py_ml.series method)": [[94, "opensearch_py_ml.Series.rename"]], "rfloordiv() (opensearch_py_ml.series method)": [[95, "opensearch_py_ml.Series.rfloordiv"]], "rmod() (opensearch_py_ml.series method)": [[96, "opensearch_py_ml.Series.rmod"]], "rmul() (opensearch_py_ml.series method)": [[97, "opensearch_py_ml.Series.rmul"]], "rmultiply() (opensearch_py_ml.series method)": [[98, "opensearch_py_ml.Series.rmultiply"]], "rpow() (opensearch_py_ml.series method)": [[99, "opensearch_py_ml.Series.rpow"]], "rsub() (opensearch_py_ml.series method)": [[100, "opensearch_py_ml.Series.rsub"]], "rsubtract() (opensearch_py_ml.series method)": [[101, "opensearch_py_ml.Series.rsubtract"]], "rtruediv() (opensearch_py_ml.series method)": [[102, "opensearch_py_ml.Series.rtruediv"]], "sample() (opensearch_py_ml.series method)": [[103, "opensearch_py_ml.Series.sample"]], "shape (opensearch_py_ml.series attribute)": [[104, "opensearch_py_ml.Series.shape"]], "size (opensearch_py_ml.series attribute)": [[105, "opensearch_py_ml.Series.size"]], "std() (opensearch_py_ml.series method)": [[106, "opensearch_py_ml.Series.std"]], "sub() (opensearch_py_ml.series method)": [[107, "opensearch_py_ml.Series.sub"]], "subtract() (opensearch_py_ml.series method)": [[108, "opensearch_py_ml.Series.subtract"]], "sum() (opensearch_py_ml.series method)": [[109, "opensearch_py_ml.Series.sum"]], "tail() (opensearch_py_ml.series method)": [[110, "opensearch_py_ml.Series.tail"]], "to_numpy() (opensearch_py_ml.series method)": [[111, "opensearch_py_ml.Series.to_numpy"]], "to_pandas() (opensearch_py_ml.series method)": [[112, "opensearch_py_ml.Series.to_pandas"]], "to_string() (opensearch_py_ml.series method)": [[113, "opensearch_py_ml.Series.to_string"]], "truediv() (opensearch_py_ml.series method)": [[114, "opensearch_py_ml.Series.truediv"]], "unique() (opensearch_py_ml.series method)": [[115, "opensearch_py_ml.Series.unique"]], "value_counts() (opensearch_py_ml.series method)": [[116, "opensearch_py_ml.Series.value_counts"]], "var() (opensearch_py_ml.series method)": [[117, "opensearch_py_ml.Series.var"]], "csv_to_opensearch() (in module opensearch_py_ml.etl)": [[118, "opensearch_py_ml.etl.csv_to_opensearch"]], "dataframegroupby (class in opensearch_py_ml.groupby)": [[119, "opensearch_py_ml.groupby.DataFrameGroupBy"]], "agg() (opensearch_py_ml.groupby.dataframegroupby method)": [[120, "opensearch_py_ml.groupby.DataFrameGroupBy.agg"]], "aggregate() (opensearch_py_ml.groupby.dataframegroupby method)": [[121, "opensearch_py_ml.groupby.DataFrameGroupBy.aggregate"]], "count() (opensearch_py_ml.groupby.dataframegroupby method)": [[122, "opensearch_py_ml.groupby.DataFrameGroupBy.count"]], "mad() (opensearch_py_ml.groupby.dataframegroupby method)": [[123, "opensearch_py_ml.groupby.DataFrameGroupBy.mad"]], "max() (opensearch_py_ml.groupby.dataframegroupby method)": [[124, "opensearch_py_ml.groupby.DataFrameGroupBy.max"]], "mean() (opensearch_py_ml.groupby.dataframegroupby method)": [[125, "opensearch_py_ml.groupby.DataFrameGroupBy.mean"]], "median() (opensearch_py_ml.groupby.dataframegroupby method)": [[126, "opensearch_py_ml.groupby.DataFrameGroupBy.median"]], "min() (opensearch_py_ml.groupby.dataframegroupby method)": [[127, "opensearch_py_ml.groupby.DataFrameGroupBy.min"]], "nunique() (opensearch_py_ml.groupby.dataframegroupby method)": [[128, "opensearch_py_ml.groupby.DataFrameGroupBy.nunique"]], "quantile() (opensearch_py_ml.groupby.dataframegroupby method)": [[129, "opensearch_py_ml.groupby.DataFrameGroupBy.quantile"]], "std() (opensearch_py_ml.groupby.dataframegroupby method)": [[130, "opensearch_py_ml.groupby.DataFrameGroupBy.std"]], "sum() (opensearch_py_ml.groupby.dataframegroupby method)": [[131, "opensearch_py_ml.groupby.DataFrameGroupBy.sum"]], "var() (opensearch_py_ml.groupby.dataframegroupby method)": [[132, "opensearch_py_ml.groupby.DataFrameGroupBy.var"]], "upload_model() (in module opensearch_py_ml.ml_commons_integration.mlcommonclient)": [[134, "opensearch_py_ml.ml_commons_integration.MLCommonClient.upload_model"]], "opensearch_to_pandas() (opensearch_py_ml.etl method)": [[135, "opensearch_py_ml.etl.opensearch_to_pandas"]], "pandas_to_opensearch() (opensearch_py_ml.etl method)": [[136, "opensearch_py_ml.etl.pandas_to_opensearch"]]}})